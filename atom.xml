<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BLOG | HDSKY</title>
  
  <subtitle>You&#39;re the light of the world.</subtitle>
  <link href="https://hdsky.pw/atom.xml" rel="self"/>
  
  <link href="https://hdsky.pw/"/>
  <updated>2025-07-29T07:38:47.000Z</updated>
  <id>https://hdsky.pw/</id>
  
  <author>
    <name>黑&amp;蛋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在服务器中屏蔽非中国地区的IP访问</title>
    <link href="https://hdsky.pw/2025-07-29-block-not-cn-ip.html"/>
    <id>https://hdsky.pw/2025-07-29-block-not-cn-ip.html</id>
    <published>2025-07-29T07:25:55.000Z</published>
    <updated>2025-07-29T07:38:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果服务器面向的用户主要是国内用户,如何拒绝国外 IP &#x2F; 屏蔽国外 IP 访问服务器？<span id="more"></span></p><p>保存下面的脚本为 allcn.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mmode=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#wget https://ghfast.top/https://github.com/17mon/china_ip_list/blob/master/china_ip_list.txt</span></span><br><span class="line"></span><br><span class="line">CNIP=<span class="string">&quot;/home/username/china_ip_list.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">gen_iplist</span></span>() &#123;</span><br><span class="line">    <span class="built_in">cat</span> &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">        $(cat $&#123;CNIP:=/dev/null&#125; 2&gt;/dev/null)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">flush_r</span></span>() &#123;</span><br><span class="line">    iptables -F ALLCNRULE 2&gt;/dev/null</span><br><span class="line">    iptables -D INPUT -p tcp -j ALLCNRULE 2&gt;/dev/null</span><br><span class="line">    iptables -X ALLCNRULE 2&gt;/dev/null</span><br><span class="line">    ipset -X allcn 2&gt;/dev/null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">mstart</span></span>() &#123;</span><br><span class="line">    ipset create allcn <span class="built_in">hash</span>:net 2&gt;/dev/null</span><br><span class="line">    ipset -! -R &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">$(gen_iplist | sed -e &quot;s/^/add allcn /&quot;)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">    iptables -N ALLCNRULE</span><br><span class="line">    iptables -I INPUT -p tcp -j ALLCNRULE</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 放行已建立和关联的连接</span></span><br><span class="line">    iptables -A ALLCNRULE -m conntrack --ctstate ESTABLISHED,RELATED -j RETURN</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 本地及内网地址放行</span></span><br><span class="line">    iptables -A ALLCNRULE -s 127.0.0.0/8 -j RETURN</span><br><span class="line">    iptables -A ALLCNRULE -s 169.254.0.0/16 -j RETURN</span><br><span class="line">    iptables -A ALLCNRULE -s 224.0.0.0/4 -j RETURN</span><br><span class="line">    iptables -A ALLCNRULE -s 255.255.255.255 -j RETURN</span><br><span class="line"></span><br><span class="line">    iptables -A ALLCNRULE -s 10.0.0.0/8 -j RETURN</span><br><span class="line">    iptables -A ALLCNRULE -s 172.16.0.0/12 -j RETURN</span><br><span class="line">    iptables -A ALLCNRULE -s 192.168.0.0/16 -j RETURN</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 来自中国大陆 IP 放行</span></span><br><span class="line">    iptables -A ALLCNRULE -m <span class="built_in">set</span> --match-set allcn src -j RETURN</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. 其余 DROP</span></span><br><span class="line">    iptables -A ALLCNRULE -p tcp -j DROP</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主入口逻辑</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$mmode</span>&quot;</span> == <span class="string">&quot;stop&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    flush_r</span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">flush_r</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line">mstart</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>屏蔽国外IP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./allcn.sh</span><br></pre></td></tr></table></figure><p>解除屏蔽国外IP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./allcn.sh stop</span><br></pre></td></tr></table></figure><p>查看iptables，检查屏蔽或解除屏蔽的结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果服务器面向的用户主要是国内用户,如何拒绝国外 IP &amp;#x2F; 屏蔽国外 IP 访问服务器？</summary>
    
    
    
    
    <category term="分享" scheme="https://hdsky.pw/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>如何卸载Dify</title>
    <link href="https://hdsky.pw/2025-02-28-dify.html"/>
    <id>https://hdsky.pw/2025-02-28-dify.html</id>
    <published>2025-02-28T10:11:22.000Z</published>
    <updated>2025-02-28T10:31:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Dify (<a href="https://github.com/langgenius/dify">https://github.com/langgenius/dify</a>) 总是有莫名其妙的bug，太难用了，咱们直接一个卸载的进行，翻了下手册没有提到如何将其从服务器中移除，在此就当作记录。<span id="more"></span></p><p>首先进入到安装时的目录，进入到docker文件夹下面，也就是进入到包含 docker-compose.yml 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##停止容器</span></span><br><span class="line">docker-compose down</span><br><span class="line"><span class="comment">##删除无用镜像，警告⚠️会删除系统中所有未在使用的镜像</span></span><br><span class="line"><span class="comment">#docker image prune -a</span></span><br></pre></td></tr></table></figure><p>然后删除下载的dify项目文件,然后就彻底移除了dify。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Dify (&lt;a href=&quot;https://github.com/langgenius/dify&quot;&gt;https://github.com/langgenius/dify&lt;/a&gt;) 总是有莫名其妙的bug，太难用了，咱们直接一个卸载的进行，翻了下手册没有提到如何将其从服务器中移除，在此就当作记录。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ChatGLM2-6B-int4 模型初步尝试</title>
    <link href="https://hdsky.pw/2023-08-27-chatglm2.html"/>
    <id>https://hdsky.pw/2023-08-27-chatglm2.html</id>
    <published>2023-08-26T21:11:12.000Z</published>
    <updated>2023-08-27T15:15:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>是一款国内推出的开源的自然语言模型，通过 <code>chatglm2-6b-int4</code> 模型能够在6G左右的显卡以及CPU下实现调用，比较适合个人电脑部署。<span id="more"></span></p><p>项目地址 <a href="https://github.com/THUDM/ChatGLM2-6B">https://github.com/THUDM/ChatGLM2-6B</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>ChatGLM<strong>2</strong>-6B 是开源中英双语对话模型 <a href="https://github.com/THUDM/ChatGLM-6B">ChatGLM-6B</a> 的第二代版本，在保留了初代模型对话流畅、部署门槛较低等众多优秀特性的基础之上，ChatGLM<strong>2</strong>-6B 引入了如下新特性：</p><ol><li><strong>更强大的性能</strong>：基于 ChatGLM 初代模型的开发经验，我们全面升级了 ChatGLM2-6B 的基座模型。ChatGLM2-6B 使用了 <a href="https://github.com/THUDM/GLM">GLM</a> 的混合目标函数，经过了 1.4T 中英标识符的预训练与人类偏好对齐训练，<a href="#%E8%AF%84%E6%B5%8B%E7%BB%93%E6%9E%9C">评测结果</a>显示，相比于初代模型，ChatGLM2-6B 在 MMLU（+23%）、CEval（+33%）、GSM8K（+571%） 、BBH（+60%）等数据集上的性能取得了大幅度的提升，在同尺寸开源模型中具有较强的竞争力。</li><li><strong>更长的上下文</strong>：基于 <a href="https://github.com/HazyResearch/flash-attention">FlashAttention</a> 技术，我们将基座模型的上下文长度（Context Length）由 ChatGLM-6B 的 2K 扩展到了 32K，并在对话阶段使用 8K 的上下文长度训练。对于更长的上下文，我们发布了 <a href="https://huggingface.co/THUDM/chatglm2-6b-32k">ChatGLM2-6B-32K</a> 模型。<a href="https://github.com/THUDM/LongBench">LongBench</a> 的测评结果表明，在等量级的开源模型中，ChatGLM2-6B-32K 有着较为明显的竞争优势。</li><li><strong>更高效的推理</strong>：基于 <a href="http://arxiv.org/abs/1911.02150">Multi-Query Attention</a> 技术，ChatGLM2-6B 有更高效的推理速度和更低的显存占用：在官方的模型实现下，推理速度相比初代提升了 42%，INT4 量化下，6G 显存支持的对话长度由 1K 提升到了 8K。</li><li><strong>更开放的协议</strong>：ChatGLM2-6B 权重对学术研究<strong>完全开放</strong>，在填写<a href="https://open.bigmodel.cn/mla/form">问卷</a>进行登记后<strong>亦允许免费商业使用</strong>。</li></ol><h2 id="前期准备-（Base-on-Ubuntu）"><a href="#前期准备-（Base-on-Ubuntu）" class="headerlink" title="前期准备 （Base on Ubuntu）"></a>前期准备 （Base on Ubuntu）</h2><ul><li>安装好 CUDA 环境的 Ubuntu</li><li>Git &amp; git-lfs</li><li>Anaconda or Mambaforge (optional)</li></ul><h3 id="安装git-lfs"><a href="#安装git-lfs" class="headerlink" title="安装git-lfs"></a>安装git-lfs</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-lfs</span><br><span class="line">git lfs install</span><br></pre></td></tr></table></figure><p>参考：<a href="https://github.com/git-lfs/git-lfs/wiki/Installation">https://github.com/git-lfs/git-lfs/wiki/Installation</a></p><h3 id="准备模型文件-optional"><a href="#准备模型文件-optional" class="headerlink" title="准备模型文件 (optional)"></a>准备模型文件 (optional)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://huggingface.co/THUDM/chatglm2-6b-int4</span><br></pre></td></tr></table></figure><h3 id="准备项目文件"><a href="#准备项目文件" class="headerlink" title="准备项目文件"></a>准备项目文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/THUDM/ChatGLM2-6B.git</span><br></pre></td></tr></table></figure><h2 id="Just-do-it"><a href="#Just-do-it" class="headerlink" title="Just do it"></a>Just do it</h2><p>通过上面的准备工作，我们获得了两个文件夹 <code>chatglm2-6b-int4</code> 和 <code>ChatGLM2-6B</code>，分别是存放的项目文件和模型文件。</p><h3 id="创建虚拟环境-optional"><a href="#创建虚拟环境-optional" class="headerlink" title="创建虚拟环境 (optional)"></a>创建虚拟环境 (optional)</h3><p>创建一个虚拟环境，我们将其命名为 chatglm2，进入其中并安装好 python 和 pip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create -n chatglm2</span><br><span class="line">conda activate chatglm2</span><br><span class="line">conda install python</span><br></pre></td></tr></table></figure><h3 id="进入到项目文件夹，安装依赖环境"><a href="#进入到项目文件夹，安装依赖环境" class="headerlink" title="进入到项目文件夹，安装依赖环境"></a>进入到项目文件夹，安装依赖环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ChatGLM2-6B</span><br><span class="line">pip install -r requirements.txt -i https://mirror.sjtu.edu.cn/pypi/web/simple</span><br></pre></td></tr></table></figure><h3 id="修改-cli-demo-py-中的内容，指定成我们已经下载好的模型文件-optional"><a href="#修改-cli-demo-py-中的内容，指定成我们已经下载好的模型文件-optional" class="headerlink" title="修改 cli_demo.py 中的内容，指定成我们已经下载好的模型文件 (optional)"></a>修改 <code>cli_demo.py</code> 中的内容，指定成我们已经下载好的模型文件 (optional)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = AutoModel.from_pretrained(&quot;/home/hdsky/chatglm2/chatglm2-6b-int4&quot;, trust_remote_code=True).cuda()</span><br></pre></td></tr></table></figure><h3 id="然后直接执行"><a href="#然后直接执行" class="headerlink" title="然后直接执行"></a>然后直接执行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cli_demo.py</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;是一款国内推出的开源的自然语言模型，通过 &lt;code&gt;chatglm2-6b-int4&lt;/code&gt; 模型能够在6G左右的显卡以及CPU下实现调用，比较适合个人电脑部署。</summary>
    
    
    
    
    <category term="Linux" scheme="https://hdsky.pw/tags/Linux/"/>
    
    <category term="Chatglm2" scheme="https://hdsky.pw/tags/Chatglm2/"/>
    
  </entry>
  
  <entry>
    <title>高性能计算( High performance computing )的简介</title>
    <link href="https://hdsky.pw/2023-01-27-hpc-1.html"/>
    <id>https://hdsky.pw/2023-01-27-hpc-1.html</id>
    <published>2023-01-26T16:25:53.000Z</published>
    <updated>2023-02-09T17:05:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>很久没更新了，打算新开一个系列总结一下高性能计算的一些心得，其中有些内容是自己的理解，也有可能出现错误，希望大家能辩证看待。<span id="more"></span></p><h2 id="什么是高性能计算-HPC-？"><a href="#什么是高性能计算-HPC-？" class="headerlink" title="什么是高性能计算( HPC )？"></a>什么是高性能计算( HPC )？</h2><p>既然提到了高性能计算，就免不了展开讲讲什么是高性能计算。<br>下面摘录一些大厂对这个名词的理解：</p><p>NVIDIA:</p><blockquote><p>高性能计算 ( HPC ) 是推动科学发展的关键工具之一。 通过跨多个计算节点利用 GPU 助力的并行处理能力，HPC 能够高效、可靠、快速地运行先进的大型应用程序项目。速度提升后可大幅提升吞吐量并降低成本，从而为科学发现铺平道路。</p></blockquote><p>Red Hat:</p><blockquote><p>高性能计算（ HPC ）通常是指在多个服务器上并行处理复杂计算。这些服务器组被称为集群，它们是由成百甚至上千台通过网络连接的计算服务器组成的。在 HPC 集群中，每台计算机通常被称为一个节点。</p></blockquote><p>Intel:</p><blockquote><ul><li>高性能计算 ( HPC ) 是一类可处理计算密集型任务的应用程序和工作负载。</li><li>随着对 HPC 的需求不断增长，在学术和工业环境中，涉及大量数据的 AI 驱动型用例日益增多。</li><li>HPC 集群基于高性能处理器而构建，并搭载高速内存和存储以及其他高级组件。</li></ul></blockquote><p>可以发现各个大厂对于其定义并不相同，但可以看出，都是基于其在高性能计算中所扮演的不同角色而做出的不同定义。</p><p>英伟达在其中主要是贡献了 GPU 部分，而 GPU 作为图形处理单元，在最近几年的实际运用中，越来愈多的参与到了深度学习训练以及推理当中，在此不再展开，本文的重点不在于此。其对于高性能计算的描述就是体现其在高性能计算当中扮演重要的角色。</p><p>而对于 Red Hat 本身来说，高性能计算是用多个服务器所构建成的一套计算系统。考虑到 Red Hat 为其贡献了操作系统，以及各种的基础软件和组建，并提供了一些方便的集群管理工具以及监控系统。Red Hat 更关心高性能计算对于更多服务器的需求以及其中的操作系统的支持。</p><p>Intel 也是从自己的业务角度出发，更多的关注于高性能计算中的计算以及自己所生产的内存以及固态存储等设备。同时希望自己能从NVIDA手中抢夺一些 AI 计算的业务。</p><p>上面提到的这些，只是想说明，每个人或者组织都是从自己的角度出发，以自身的视角来看待高性能计算是什么。总的来说，高性能计算是一个系统性的技术或者说是解决方案，其中需要软件与硬件的相互协作。</p><p>高性能计算的发展历史也有段时间了，其诞生就是为了解决“计算”这一问题，而在发展中，人们逐渐认识到单台设备所能提供的算力是有限的，而近现代以来，几乎所有的高性能计算都主要以横向扩展为手段来提高整个集群所能提供的算力支持。提到这个，我们就引出了下面要介绍的内容– –并行计算。</p><h2 id="并行计算（-Parallel-computing-）"><a href="#并行计算（-Parallel-computing-）" class="headerlink" title="并行计算（ Parallel computing ）"></a>并行计算（ Parallel computing ）</h2><p>并行计算是多指令同步进行的计算模式，通过将复杂的计算任务分解，使其能够在同一时刻在多个处理器中同步进行处理。其目的在于提高作业（ job ）的计算速度，以及扩大问题的求解规模，从而解决复杂的计算问题。</p><img src="/images/2023/01-27-hpc-1/1.webp" class="" width="500"><p>其能够提供明显优于串行计算的计算效率，但同时也对程序的编写带来了更多的困难，需要开发并行程序的程序员能够对操作系统以及处理器的指令包括流水架构有更深入的理解。</p><p>在翻阅资料的过程中我又发现了一个之前没有注意到的细节，那就是并行计算（ Parallel computing ）并不等同于分布式计算（ Distributed computing ）</p><h3 id="并行计算（-Parallel-computing-）与分布式计算（-Distributed-computing-）"><a href="#并行计算（-Parallel-computing-）与分布式计算（-Distributed-computing-）" class="headerlink" title="并行计算（ Parallel computing ）与分布式计算（ Distributed computing ）"></a>并行计算（ Parallel computing ）与分布式计算（ Distributed computing ）</h3><p>并行计算和分布式计算其目的都是将复杂的问题简单化，通过并行化来获得更高性能，将一个大型的任务分解成多个较小的任务，从而在尽可能短的时间内获取最终的答案。</p><p>分布式计算可以说是并行计算的一种特殊形式，并行计算最大的特点在于共享内存以及任务之间的通信协同，也就是资源共享以及信息同步，而分布式计算的任务之间关联性不高，其任务先后结束也对整体计算影响不大，对同步没有要求。</p><p>其中并行计算需要解决的问题是资源的访问冲突以及通信所带来的额外开销，分布式计算则需要对任务的可靠性进行验证。</p><img src="/images/2023/01-27-hpc-1/2.webp" class="" width="1000"><p>随着高性能计算的发展，在实际的工作与生活中，这些基本概念在非严格定义的情况下，已经混淆了并行计算以及分布式计算，同时由于问题所适用的最佳计算方法不同，并行计算和分布式计算可能会出现在同一个高性能计算系统当中，两者已经出现了一些融合趋势。</p><hr><p>未完待续……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;很久没更新了，打算新开一个系列总结一下高性能计算的一些心得，其中有些内容是自己的理解，也有可能出现错误，希望大家能辩证看待。</summary>
    
    
    
    
    <category term="Linux" scheme="https://hdsky.pw/tags/Linux/"/>
    
    <category term="HPC" scheme="https://hdsky.pw/tags/HPC/"/>
    
    <category term="Slurm" scheme="https://hdsky.pw/tags/Slurm/"/>
    
  </entry>
  
  <entry>
    <title>在Linux中使用Postfix进行SMTP邮件发送服务</title>
    <link href="https://hdsky.pw/2020-03-18-Postfix.html"/>
    <id>https://hdsky.pw/2020-03-18-Postfix.html</id>
    <published>2020-03-18T07:01:42.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为自建Email Server发送的情况下，经常会被一些邮箱服务识别成垃圾邮件从而导致用户无法收到信息，在Linux中我就使用了 <code>Postfix</code> 然后调用外部 SMTP 服务进行发件，这样有效解决了上面提到的经常会被垃圾邮件的问题，同时觉得使用外部发送邮件的方式能够解决集群的报警并及时处理的问题。<span id="more"></span></p><p>在此我选择使用腾讯企业邮箱作为发件SMTP，做下记录。</p><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>先是安装 Postfix 软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postfix</span><br></pre></td></tr></table></figure><p>我们需要对以下的配置文件进行调整</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Domain 设置</span></span><br><span class="line">mydomain = Demo.com</span><br><span class="line">myorigin = <span class="variable">$mydomain</span></span><br><span class="line">myhostname = <span class="variable">$mydomain</span></span><br><span class="line">mydestination = <span class="variable">$mydomain</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### alias设定</span></span><br><span class="line">alias_database = <span class="built_in">hash</span>:/etc/aliases</span><br><span class="line">alias_maps = <span class="built_in">hash</span>:/etc/aliases</span><br><span class="line"></span><br><span class="line"><span class="comment">### SMTP SETTINGs</span></span><br><span class="line">relayhost = [smtp.exmail.qq.com]:587</span><br><span class="line">smtp_sasl_auth_enable = <span class="built_in">yes</span></span><br><span class="line">smtp_sasl_password_maps = <span class="built_in">hash</span>:/etc/postfix/sasl_passwd</span><br><span class="line">smtp_tls_security_level = encrypt</span><br><span class="line">smtp_use_tls = <span class="built_in">yes</span></span><br><span class="line">smtp_sasl_security_options = noanonymous</span><br><span class="line"></span><br><span class="line"><span class="comment">### postfix version 2.2 or up</span></span><br><span class="line">smtp_generic_maps = <span class="built_in">hash</span>:/etc/postfix/generic</span><br></pre></td></tr></table></figure><p>使用 <code>postconf -n</code> 可以查看当前的配置，下面提供一份示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">alias_database = <span class="built_in">hash</span>:/etc/aliases</span><br><span class="line">alias_maps = <span class="built_in">hash</span>:/etc/aliases</span><br><span class="line">command_directory = /usr/sbin</span><br><span class="line">config_directory = /etc/postfix</span><br><span class="line">daemon_directory = /usr/libexec/postfix</span><br><span class="line">data_directory = /var/lib/postfix</span><br><span class="line">debug_peer_level = 2</span><br><span class="line">debugger_command = PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin ddd <span class="variable">$daemon_directory</span>/<span class="variable">$process_name</span> <span class="variable">$process_id</span> &amp; <span class="built_in">sleep</span> 5</span><br><span class="line">html_directory = no</span><br><span class="line">inet_interfaces = all</span><br><span class="line">inet_protocols = all</span><br><span class="line">mail_owner = postfix</span><br><span class="line">mailq_path = /usr/bin/mailq.postfix</span><br><span class="line">manpage_directory = /usr/share/man</span><br><span class="line">mydestination = <span class="variable">$myhostname</span>, localhost.<span class="variable">$mydomain</span>, localhost</span><br><span class="line">mydomain = Demo.com</span><br><span class="line">myhostname = <span class="variable">$mydomain</span></span><br><span class="line">myorigin = <span class="variable">$mydomain</span></span><br><span class="line">newaliases_path = /usr/bin/newaliases.postfix</span><br><span class="line">queue_directory = /var/spool/postfix</span><br><span class="line">readme_directory = /usr/share/doc/postfix-2.10.1/README_FILES</span><br><span class="line">relayhost = [smtp.exmail.qq.com]:587</span><br><span class="line">sample_directory = /usr/share/doc/postfix-2.10.1/samples</span><br><span class="line">sendmail_path = /usr/sbin/sendmail.postfix</span><br><span class="line">setgid_group = postdrop</span><br><span class="line">smtp_generic_maps = <span class="built_in">hash</span>:/etc/postfix/generic</span><br><span class="line">smtp_sasl_auth_enable = <span class="built_in">yes</span></span><br><span class="line">smtp_sasl_password_maps = <span class="built_in">hash</span>:/etc/postfix/sasl_passwd</span><br><span class="line">smtp_sasl_security_options = noanonymous</span><br><span class="line">smtp_tls_security_level = encrypt</span><br><span class="line">smtp_use_tls = <span class="built_in">yes</span></span><br><span class="line">unknown_local_recipient_reject_code = 550</span><br></pre></td></tr></table></figure><p>然后在 <code>/etc/postfix/sasl_passwd</code> 里边写入邮箱用户名和密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[smtp.exmail.qq.com]:587 noreply@Demo.com:[PASSWORD]</span><br></pre></td></tr></table></figure><p>在 <code>/etc/postfix/generic</code> 里配置信封上的发件人（MAIL FROM 命令）的地址重写，不然会出现认证错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Demo.com noreply@Demo.com</span><br></pre></td></tr></table></figure><p>在 <code>/etc/aliases</code> 中添加 root 邮件转发，这样发送到root的邮件,都会转发到<code>Toplay@Demo.com</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postmaster:     root</span><br><span class="line">root: Toplay@Demo.com  <span class="comment">##添加这个</span></span><br></pre></td></tr></table></figure><p>之后要使用<code>newaliases</code>命令来重新生成 <code>aliases</code> 库文件，使更改生效。</p><p>最后生成 hash 数据库，并更改文件权限，每次修改这些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">postmap /etc/postfix/sasl_passwd</span><br><span class="line">postmap /etc/postfix/generic</span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/postfix/sasl_passwd*</span><br></pre></td></tr></table></figure><p>重启或重新加载 Postfix：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postfix restart</span><br></pre></td></tr></table></figure><h2 id="发件测试"><a href="#发件测试" class="headerlink" title="发件测试"></a>发件测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;This is a mail&#x27;</span> | mail -s <span class="string">&#x27;This is a mail&#x27;</span> xxxxx@163.com</span><br></pre></td></tr></table></figure><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>过程中可能并不会那么的一帆风顺，在下面提供了一些简单的调试方法仅供参考：</p><p>首先看日志文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f /var/log/maillog</span><br></pre></td></tr></table></figure><p>查看邮件队列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mailq</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;因为自建Email Server发送的情况下，经常会被一些邮箱服务识别成垃圾邮件从而导致用户无法收到信息，在Linux中我就使用了 &lt;code&gt;Postfix&lt;/code&gt; 然后调用外部 SMTP 服务进行发件，这样有效解决了上面提到的经常会被垃圾邮件的问题，同时觉得使用外部发送邮件的方式能够解决集群的报警并及时处理的问题。</summary>
    
    
    
    
    <category term="Linux" scheme="https://hdsky.pw/tags/Linux/"/>
    
    <category term="学习笔记" scheme="https://hdsky.pw/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>记录一次基于SSMTP的腾讯企业邮的配置过程</title>
    <link href="https://hdsky.pw/2020-03-03-ssmtp.html"/>
    <id>https://hdsky.pw/2020-03-03-ssmtp.html</id>
    <published>2020-03-03T13:27:45.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要在Linux上找到一种基于命令行的SMTP邮件发送方式，经过多方尝试，用SSMTP实现了我的需求，在此记录一下。<span id="more"></span></p><p>先是在Ubuntu上安装需要的SSMTP软件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ssmtp</span><br></pre></td></tr></table></figure><p>安装完成之后需要对以下两个配置文件进行编辑。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/ssmtp/ssmtp.conf</span><br><span class="line">#</span><br><span class="line"># Config file for sSMTP sendmail</span><br><span class="line">#</span><br><span class="line"># The person who gets all mail for userids &lt; 1000</span><br><span class="line"># Make this empty to disable rewriting.</span><br><span class="line">root=demo@demo.com</span><br><span class="line"></span><br><span class="line"># 这里填腾讯企业邮箱的发送服务器</span><br><span class="line"># 注意腾讯企业邮箱和QQ邮箱不是同一个服务器，请注意区分</span><br><span class="line"># 官方提供的SMTP服务器端口是465 但实际上这里使用的端口是587</span><br><span class="line">mailhub=smtp.exmail.qq.com:587</span><br><span class="line"></span><br><span class="line"># 填写邮箱和密码（如果你用的是QQ邮箱，你可能会需要在这里填写“授权码”或“客户端专用密码”而不是“邮箱密码”）</span><br><span class="line">AuthUser=demo@demo.com</span><br><span class="line">AuthPass=你的密码</span><br><span class="line"></span><br><span class="line"># 启用 STARTTLS</span><br><span class="line">UseTLS=YES</span><br><span class="line">UseSTARTTLS=YES</span><br><span class="line"></span><br><span class="line"># Where will the mail seem to come from?</span><br><span class="line"># 重定向的发件域</span><br><span class="line">#rewriteDomain=demo.com</span><br><span class="line"></span><br><span class="line"># The full hostname</span><br><span class="line"># 发件的域名</span><br><span class="line">#hostname=demo.com</span><br><span class="line"></span><br><span class="line"># Are users allowed to set their own From: address?</span><br><span class="line"># YES - Allow the user to specify their own From: address</span><br><span class="line"># NO - Use the system generated From: address</span><br><span class="line"># 是否允许指定发件人</span><br><span class="line">FromLineOverride=YES</span><br></pre></td></tr></table></figure><p>下面设置用户别名（否则会出现 <code>501 mail from address must be same as authorization user</code> 错误）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/ssmtp/revaliases</span><br><span class="line"># sSMTP aliases</span><br><span class="line">#</span><br><span class="line"># Format:   local_account:outgoing_address:mailhub</span><br><span class="line">#</span><br><span class="line"># Example: root:your_login@your.domain:mailhub.your.domain[:port]</span><br><span class="line"># where [:port] is an optional port number that defaults to 25.</span><br><span class="line">root:demo@demo.com:smtp.exmail.qq.com:587</span><br></pre></td></tr></table></figure><blockquote><p>这里的root是指在Linux中操作的用户，如果你当前Linux系统的用户不是root，可能需要更改。</p></blockquote><p>配置文件中的<code>demo@demo.com</code>，在实际应用中应该用你自己的邮箱来替代。</p><p>然后使用下面的命令就能发送测试邮件了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello my friend&quot;| ssmtp -v rec@demo.com</span><br></pre></td></tr></table></figure><p>在实际应用中应该去除 <code>-v</code> 参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;Subject: this is the subject\n\nthis is the body&quot; | ssmtp rec@demo.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近需要在Linux上找到一种基于命令行的SMTP邮件发送方式，经过多方尝试，用SSMTP实现了我的需求，在此记录一下。</summary>
    
    
    
    
    <category term="Linux" scheme="https://hdsky.pw/tags/Linux/"/>
    
    <category term="学习笔记" scheme="https://hdsky.pw/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV的学习笔记</title>
    <link href="https://hdsky.pw/2019-08-05-opencv-code.html"/>
    <id>https://hdsky.pw/2019-08-05-opencv-code.html</id>
    <published>2019-08-04T16:10:03.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近抽空的时候会做一个图像处理的项目，也算完成以前没有完成的任务，在此记录下一些学习的过程，希望对其他人能够有所帮助。<span id="more"></span></p><p>有关于OpenCV的安装以及其他介绍请参考我以前写的一篇<a href="https://hdsky.pw/2016/12/24/opencv-setup/">《OpenCV的学习之路(一)环境的搭建以及和小伙伴Visual Studio的搞基之旅》</a> 当然那篇文章已经是很久以前写的了，有些地方已经不符合现在的情况，还请谅解。</p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这几年伴随着各界对于计算机视觉领域关注，计算机视觉领域已经得到很大的发展，除了OpenCV外，在传统计算机视觉领域还有MATLAB也可以作为开发工具。同时，在深度学习引入到机器视觉后很多人也都转向了使用机器学习。</p><p>OpenCV的很多资料在官方的文档中已经写的很详细了，和很多网上的教程也都基于官方的文档进行拓展，在参考网上教程的时候需要多留意一下OpenCV的版本，OpenCV从我关注开始的2版本到我当时使用的3版本，以及现在的最新版本是4，已近进行了多次迭代，不同版本之间的区别应该不小。</p><p>我目前的开发平台是Ubuntu18.04LTS + Python3.7 + OpenCV4.1.0</p><h2 id="检查OpenCV版本"><a href="#检查OpenCV版本" class="headerlink" title="检查OpenCV版本"></a>检查OpenCV版本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="built_in">print</span>(cv.__version__)</span><br></pre></td></tr></table></figure><h2 id="打开图片"><a href="#打开图片" class="headerlink" title="打开图片"></a>打开图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load an color image in grayscale</span></span><br><span class="line">img = cv.imread(<span class="string">&#x27;image/j2.jpg&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">cv.imshow(<span class="string">&#x27;image&#x27;</span>,img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近抽空的时候会做一个图像处理的项目，也算完成以前没有完成的任务，在此记录下一些学习的过程，希望对其他人能够有所帮助。</summary>
    
    
    
    
    <category term="学习笔记" scheme="https://hdsky.pw/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="OpenCV" scheme="https://hdsky.pw/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu 18.04 LTS 中安装 LaTeX 并配合VScode使用</title>
    <link href="https://hdsky.pw/2019-07-03-latex-install.html"/>
    <id>https://hdsky.pw/2019-07-03-latex-install.html</id>
    <published>2019-07-03T02:57:41.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>简单介绍了一下如何在Ubuntu 18.04 LTS 中安装 LaTeX<span id="more"></span></p><blockquote><p>LaTeX（&#x2F;ˈlɑːtɛx&#x2F;，常被读作&#x2F;ˈlɑːtɛk&#x2F;或&#x2F;ˈleɪtɛk&#x2F;），排版时通常使用LATEX，是一种基于TeX的排版系统，由美国计算机科学家莱斯利·兰伯特在20世纪80年代初期开发，利用这种格式系统的处理，即使用户没有排版和程序设计的知识也可以充分发挥由TeX所提供的强大功能，不必一一亲自去设计或校对，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学、物理文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。</p></blockquote><p>LaTeX有很多发行版，TeX Live就是其中一种。TeX Live 是 TUG (TeX User Group) 维护和发布的 TeX 系统，可说是「官方」的 TeX 系统。TeX Live可以保持在跨操作系统平台、跨用户的一致性。而且TeX Live在Ubuntu18.04上的安装也比较方便。</p><p>下面就以TeX Live 为例介绍LaTeX的安装方法：</p><p>直接使用Ubuntu的包管理进行安装完全版的TeX Live，需要的存储空间大概在4GB左右</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install texlive-full</span><br></pre></td></tr></table></figure><p>假设你在之前已经安装好了VScode，当然你选用其他支持调用LaTeX的编辑器，比如<code>TeXworks</code>，<code>TeXmaker</code>，和<code>TeXstudio</code></p><p>在插件处搜索<code>LaTeX Workshop</code>，然后安装好就可以使用啦</p><p>这里提供了一个测试的样例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;xeCJK&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line">hello,你好</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>你需要建立一个以<code>.tex</code>为后缀的文件，编写完LaTeX文档后，按下导航栏右侧的<code>viwe LaTeX pdf file</code>的按键，最后输出的样子应该是这样的：</p><img src="/images/2019/07-03-latex-install/show.png" class="" width="800">]]></content>
    
    
    <summary type="html">&lt;p&gt;简单介绍了一下如何在Ubuntu 18.04 LTS 中安装 LaTeX</summary>
    
    
    
    
    <category term="技术笔记" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 调整XFS格式的LVM大小</title>
    <link href="https://hdsky.pw/2019-06-14-Centos7-xfs-lvm.html"/>
    <id>https://hdsky.pw/2019-06-14-Centos7-xfs-lvm.html</id>
    <published>2019-06-14T02:15:35.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一次对LVM虚拟化的XFS磁盘格式的调整过程<span id="more"></span></p><p>先介绍一下Linux的LVM以及相应的背景。</p><blockquote><p>LVM（Logical Volume Manager），把机器的一块硬盘分为两个区sda1和sda2，其中分区sda1作为系统盘&#x2F;boot挂载，少量空间；sda2作为一个物理卷并且完全作为逻辑卷组VG(Volume Group）centos，在这个逻辑卷组centos中建立三个逻辑卷LV（Logical Volume）root和home还有swap，分别挂载到根目录<code>/</code>和<code>/home</code>以及swap。而两个分区sda1和sda2上都建立了文件系统XFS，文件系统XFS作为RedHat的默认文件系统也有它的考虑，成为继ext3，ext4之后的主流文件系统。</p></blockquote><blockquote><p>几个概念的关系：N个物理硬盘HD或者物理硬盘中的分区一起组建为一个逻辑卷组VG及存储池，在卷组VG中创建N个逻辑卷LV，在一个逻辑卷LV中创建文件系统比如xfs。物理硬盘&#x2F;分区、逻辑卷有最小基本寻址单元，CentOS7默认的大小为4MB，二者一一对应，类似于链接或者变量引用，但是一个二者关系并非一直不变，因为物理硬盘可能发生变化而逻辑卷自动调整。创建卷组和逻辑卷，会类似于创建分区一样在磁盘开始位置写入卷的信息VGDA（卷组描述符区域，Volume Group Descriptor Area）用于识别。逻辑卷的好处在于屏蔽物理底层支撑，可自由扩展变更，而不用担心硬盘或者分区的物理空间局限，也就不会存在为了扩展分区大小而去备份&#x2F;扩展分区重新格式化硬盘等问题。</p></blockquote><p>Cent0S 7默认启用LVM（Logical Volume Manager）支持,可以更加简便地扩大和缩小分区，在CentOS 7默认安装的过程中，其根目录<code>/</code>只会分配50GB的空间，在大多数的使用场景中这个空间还算可以，但免不了需要对其扩容的情况（虽然你可以扔在<code>/home</code>下面2333333333）。同时XFS是centos7默认的文件系统，不像其他文件系统ext3，ext4或者reiserfs等，有命令（resize2fs，resize_reiserfs）直接支持缩小文件系统的大小，XFS支持扩展增大但是不支持缩小空间，所以在必须缩小LVM的情况下，需要利用xfsdump&#x2F;xfsrestore等工具，备份与还原资料，实现对根目录<code>/</code>的扩容。</p><h2 id="备份原来的-home"><a href="#备份原来的-home" class="headerlink" title="备份原来的&#x2F;home"></a>备份原来的&#x2F;home</h2><p>如果你没啥资料的话也可以跳过，因为重建<code>/home</code>会清除<code>/home</code>下所有文件,还是建议备份一下</p><p>安装xfsdump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install xfsdump</span><br></pre></td></tr></table></figure><p>将文件备份到<code>/</code>目录下（或者你希望的其他地方）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xfsdump -f /home.xfsdump /home</span><br><span class="line">please enter label for this dump session (timeout in 300 sec)</span><br><span class="line">-&gt; home</span><br><span class="line">please enter label for media in drive 0 (timeout in 300 sec)</span><br><span class="line">-&gt; home</span><br></pre></td></tr></table></figure><h2 id="缩小原有的-home分区"><a href="#缩小原有的-home分区" class="headerlink" title="缩小原有的&#x2F;home分区"></a>缩小原有的&#x2F;home分区</h2><p>先移除<code>/home</code>分区的挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /home</span><br></pre></td></tr></table></figure><p>如果提示被占用的话，可以使用 <code>-l</code>参数强制移除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -l /home</span><br></pre></td></tr></table></figure><p>缩减原有<code>/home</code>分区，分出500G空闲空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvreduce -L -500G /dev/mapper/centos-home</span><br></pre></td></tr></table></figure><h2 id="拓展-根目录"><a href="#拓展-根目录" class="headerlink" title="拓展&#x2F;根目录"></a>拓展&#x2F;根目录</h2><p>将剩余的空闲空间都分配给根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/centos/root</span><br></pre></td></tr></table></figure><h2 id="恢复-home的内容"><a href="#恢复-home的内容" class="headerlink" title="恢复&#x2F;home的内容"></a>恢复&#x2F;home的内容</h2><p>格式化<code>/home</code>分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs -f /dev/mapper/centos-home</span><br></pre></td></tr></table></figure><p>重新挂载<code>/home</code>分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /home</span><br></pre></td></tr></table></figure><p>恢复备份过的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfsrestore -f /home.xfsdump /home</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一次对LVM虚拟化的XFS磁盘格式的调整过程</summary>
    
    
    
    
    <category term="技术笔记" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Autofs服务介绍及简单配置</title>
    <link href="https://hdsky.pw/2019-06-07-autofs.html"/>
    <id>https://hdsky.pw/2019-06-07-autofs.html</id>
    <published>2019-06-07T14:07:56.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Autofs是一项按需挂载目录的服务，通过使用Autofs，当你访问NFS&#x2F;Samba 服务的时候，自动挂载到你指定好的目录，在一段时间后（默认300秒）会自动断开，相较于直接将mount命令写入到开机启动或者<code>/etc/fstab</code>中的做法，Autofs更加智能，同时也能够节约网络的带宽以及减少对服务器的资源占用。<span id="more"></span></p><blockquote><p>autofs is a program for automatically mounting directories on an as-needed basis. Auto-mounts are mounted only as they are accessed, and are unmounted after a period of inactivity. Because of this, automounting NFS&#x2F;Samba shares conserves bandwidth and offers better overall performance compared to static mounts via fstab.</p></blockquote><h2 id="Autofs服务安装"><a href="#Autofs服务安装" class="headerlink" title="Autofs服务安装"></a>Autofs服务安装</h2><p>Centos </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install autofs.x86_64</span><br></pre></td></tr></table></figure><p>Ubuntu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install autofs</span><br></pre></td></tr></table></figure><h2 id="Autofs配置"><a href="#Autofs配置" class="headerlink" title="Autofs配置"></a>Autofs配置</h2><p>下面以挂载NFS客户端为例，简单介绍Autofs的配置工作，NFS服务端的搭建不在本文描述范围内，在使用Autofs客户端前首先应该确保服务端没有问题。</p><p>在<code>/etc/auto.master</code>文件中加入一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/mnt/nfs /etc/nfs.mount</span><br></pre></td></tr></table></figure><p>这一句的意思是目录挂载在<code>/mnt/nfs</code>，对应的配置文件在<code>/etc/nfs.mount</code>，这个子配置文件需要用户自行定义，可以自己起一个方便记的名字，文件名字没有严格要求。</p><p>然后我们创建一个子配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nfs.mount</span><br></pre></td></tr></table></figure><p>添加如下配置在子配置文件中,<code>-fstype</code>是挂载的类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nfs -fstype=nfs,rw 172.168.10.128:/share</span><br></pre></td></tr></table></figure><p>重启autofs服务:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service autofs restart</span><br></pre></td></tr></table></figure><p>然后进入到<code>/mnt/nfs</code>目录中，即可看到已经挂载上。</p><p>这里要额外再提一点，如果想直接挂载在根目录即<code>/</code>目录下的时候，<code>/etc/auto.master</code>中的配置信息应为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/-      /etc/nfs.mount</span><br></pre></td></tr></table></figure><p>然后<code>/etc/nfs.mount</code>中的配置信息为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/u   -fstype=nfs,rw 172.168.10.128:/share</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Autofs是一项按需挂载目录的服务，通过使用Autofs，当你访问NFS&amp;#x2F;Samba 服务的时候，自动挂载到你指定好的目录，在一段时间后（默认300秒）会自动断开，相较于直接将mount命令写入到开机启动或者&lt;code&gt;/etc/fstab&lt;/code&gt;中的做法，Autofs更加智能，同时也能够节约网络的带宽以及减少对服务器的资源占用。</summary>
    
    
    
    
    <category term="技术笔记" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda 镜像</title>
    <link href="https://hdsky.pw/2019-04-27-anaconda-mirrors.html"/>
    <id>https://hdsky.pw/2019-04-27-anaconda-mirrors.html</id>
    <published>2019-04-27T05:52:51.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>伴随着清华和中科大相继发布公告停止同步Anaconda 镜像，似乎在中国好像就没有其他更加靠谱的Anaconda 镜像了。<span id="more"></span></p><h2 id="目前清华Anaconda源已恢复正常运作。"><a href="#目前清华Anaconda源已恢复正常运作。" class="headerlink" title="目前清华Anaconda源已恢复正常运作。"></a>目前清华Anaconda源已恢复正常运作。</h2><blockquote><p>4月25日，中国科技大学开源软件镜像站发布公告表示，决定无限期停止 Anaconda 镜像服务。目前，其网站的 Anaconda 镜像已被直接重定向至官方镜像仓库。</p></blockquote><blockquote><p>除了中科大，清华大学开源软件镜像站也曾于本月中旬发布公告表示，无限期停止 Anaconda 镜像服务。</p></blockquote><p><del>然后我在网上转了一圈，各个高校的镜像站基本都是以清华源作为上游同步，目前看到仍在同步的只有<a href="https://mirrors.cloud.tencent.com/anaconda/">腾讯镜像</a>,有需要的可以参照<a href="https://mirrors.cloud.tencent.com/help/Anaconda.html">这个</a>教程使用腾讯镜像作为Anaconda源。</del></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;伴随着清华和中科大相继发布公告停止同步Anaconda 镜像，似乎在中国好像就没有其他更加靠谱的Anaconda 镜像了。</summary>
    
    
    
    
    <category term="Anaconda" scheme="https://hdsky.pw/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>一个阶段的总结</title>
    <link href="https://hdsky.pw/2018-05-26-word-to-say.html"/>
    <id>https://hdsky.pw/2018-05-26-word-to-say.html</id>
    <published>2018-05-26T05:17:34.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>很久没更新博客了，现在来做一个阶段性的总结。<span id="more"></span></p><h1 id="随便瞎写的一些东西"><a href="#随便瞎写的一些东西" class="headerlink" title="随便瞎写的一些东西"></a>随便瞎写的一些东西</h1><p>本来又是想写一篇流水账的，这玩意从小写到大，总写流水账也不是那么回事，还是要好好写一写，玩玩文字游戏也好。本来想好一月一篇的或技术分享或闲来聊天就这么拖了快半年多没更新，那么我们就来聊一聊我在这段时间都做了什么。</p><h2 id="重修"><a href="#重修" class="headerlink" title="重修"></a>重修</h2><p>说来惭愧，因为不喜欢这个专业，大一进去发现我想的通信工程和我学的通信工程好像不太一样，然后吃吃混混在大学里，快到大四了顿然醒悟这是个啥东西，再望一眼课程进度已经拖慢了一大截，毕业岌岌可危。讲道理大四一年我都在上重修的课程，十分愧疚于老师，希望小朋友们不要向我学习。在学期末就住在实验室里，怕影响舍友的休息，也就没有回去。现在回想当时的感受已经很模糊了，只是记得当时是一段非常难过的经历<del>大三的小朋友总是拉着我要一起毕业</del>，其他也不想说什么了，在一系列机缘巧合之下我通过了考试，在此感谢阅卷老师不杀之恩。</p><h2 id="找工作"><a href="#找工作" class="headerlink" title="找工作"></a>找工作</h2><p>没有用课业的压力，勉强赶上了同窗的进度，就开始和两三好友一起找工作了，手里捏着二十份简历行走于各大招聘会之中，绝望的发现对口的岗位是如此至少，诺大个招聘会当中适合自己的岗位一眼就瞄完。当时我就在想，我就找这一个月的岗位，找不到就算了。面试了两三家互联网企业，我的就业意向是服务器运维工程师，虽然我的专业成绩不好，但从大二开始自己就喜欢折腾一些关于Linux服务器的一些操作，在过程中也积累了一些网络知识，在这时候，我积累的技能宛如救命稻草一般帮助了我。通过面试一方面发现自己的才疏学浅，另一方面也对工作岗位不是特别满意，也就萌生了去高校当网络管理员顺便进修考研的想法。也是在机缘巧合之下，遇到了一个浙江西湖高等研究院的就业机会，感谢黄老师能给我这个机会。</p><h2 id="毕业设计"><a href="#毕业设计" class="headerlink" title="毕业设计"></a>毕业设计</h2><p>在这一部分里，其实有三个小部分，开题，毕业设计，毕业论文。开题好像在找工作期间，整个人比较烦0.0，那是候自谙有一系列XX科研的经历，自信的就制作了5页PPT，然后就被怼了（emmmm。说我态度不端正，然后再看了眼开题报告，哎呦，连个程序流程图都没有，你想干啥（60分，全组最低，哭唧唧。</p><p>毕业设计在高研院做的，就网上教程Demo跑一跑，训练图像换成自己的，成果验收是个小插曲，因为答辩组长很凶，那天大家都很紧张，最后成绩组里第二吧（90分，虽然不计入最后毕业设计的总成绩，但还是挺开心的。</p><p>最后毕业论文的答辩，因为有了开题的教训准备上重视了很多，三天撸完，然后查重16%简直完美，在距离DDL大概几个小时的样子递交了论文。最后定稿的时候交给了三个老师帮我评阅（开题的阴影挥之不去）。讲道理最后依旧不放心。最后答辩的时候本来应该是第一顺位的，因为去装订了，所以坑我我后面的同学一把（，最后因为PPT临时准备的不过效果也还行，希望是最后一次通宵，身体经吃不消了😀，虽然现在分数没出来不过讲道理应该答辩通过没问题了#flag。</p><p>不知道是不是贵校升了一本的缘故，这次毕业设计的流程以及各种繁琐的操作都让人大长见识，答辩组组长王雪洁老师也是非常严格，不过也十分感谢，也感谢帮我审稿的三位老师以及提供帮助的各位同学。</p><h2 id="未来的期望"><a href="#未来的期望" class="headerlink" title="未来的期望"></a>未来的期望</h2><p>讲道理也没啥期望，博客依旧会更新，然后，会重新把Python学起来，然后可能会开个Linux基础教程的专题。谢谢大家！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;很久没更新博客了，现在来做一个阶段性的总结。</summary>
    
    
    
    <category term="随便写的东西" scheme="https://hdsky.pw/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
    <category term="随写" scheme="https://hdsky.pw/tags/%E9%9A%8F%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>关于一次opencv3.3+Linux（Ubuntu17.04）的编译记录</title>
    <link href="https://hdsky.pw/2017-10-10-Linux-opencv3-3.html"/>
    <id>https://hdsky.pw/2017-10-10-Linux-opencv3-3.html</id>
    <published>2017-10-10T03:35:08.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近将开发平台逐步转移到Linux上来，会有不少坑来踩，另外发现网上搜索到的内容多数是旧版本的安装过程，不太适宜现在的安装过程。<span id="more"></span></p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>我的开发平台选择的是Ubuntu17.04，因为已经集成了python3，python3就不用装了。这里主要是安装编译环境。</p><p><code>sudo apt install build-essential pkg-config cmake</code></p><h2 id="下载及安装"><a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h2><p>我在这里使用的是Git的方式获取源码进行编译，你要先确认你的设备上已经安装了Git，最好还掌握一些科学的知识。</p><p><code>sudo apt install git</code></p><p>然后我们来下载需要的opencv源码，其中opencv_contrib是opencv额外的组件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/opencv/opencv.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/opencv/opencv_contrib.git</span><br></pre></td></tr></table></figure><p>然后分别进入两个文件进行版本tag的切换，因为opencv使用了Git的tag标记了版本，若要对opencv进行编译，需要确认opencv和opencv_contrib的版本一致。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> opencv </span><br><span class="line">git checkout -b <span class="built_in">test</span> 3.3.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> opencv_contrib</span><br><span class="line">git checkout -b <span class="built_in">test</span> 3.3.0</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>使用cmake-gui是一种非常友好的方式，我们首先要建立一个文件夹来保存编译好的文件，先进入opencv目录，建立一个build文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br></pre></td></tr></table></figure><p>然后使用命令<code>cmake-gui</code>召唤cmake-gui<br>然后在 Where is the source code 中添加 opencv 目录的路径，在 where to build the binaries 中添加 build 目录的路径。</p><p>然后点击下面的 Configure，选择 Unix Makefiles，然后选择 default …。点击 OK，从而处理 opencv 目录下的 CMakeLists.txt，并在 build 目录下生成 CMakeCache.txt 及 Makefile 等相关文件。</p><p>之后开始修改配置文件。<br>修改OPENCV_EXTRA_MODULES_PATH 设为 opencv_contrib 中的 modules 目录的路径（比如，&#x2F;home&#x2F;hdsky&#x2F;opencv_contrib&#x2F;modules 请按实际情况填写）</p><p>然后点击 Configure，应用刚才的修改并更新至 build 目录下的 CMakeCache.txt 中。然后点击 Generate，更新 Makefile。</p><p>然后回到build文件夹中，使用命令<code>make -j4</code>这里的4是指线程的意思，就是编译使用四个线程，最好根据自己CPU的情况进行填写。</p><p>编译完成后执行下面的命令，将可执行文件安装在指定的目录里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="测试C"><a href="#测试C" class="headerlink" title="测试C++"></a>测试C++</h3><p>新建一个 test.cc</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mat img;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/local/lib/pkgconfig</span><br><span class="line"><span class="comment"># 那个 ` 是 esc 键下面的字符。</span></span><br><span class="line">g++ test.cc `pkg-config --cflags --libs opencv`</span><br><span class="line"><span class="comment"># 若无错误产生，则表示成功安装；否则安装失败。</span></span><br><span class="line">./a.out</span><br></pre></td></tr></table></figure><h3 id="测试OpenCV-for-Python3"><a href="#测试OpenCV-for-Python3" class="headerlink" title="测试OpenCV for Python3"></a>测试OpenCV for Python3</h3><p>新建一个test.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br></pre></td></tr></table></figure><p>然后使用<code>python3 test.py</code><br>如果没有产生错误，则说明安装成功；否则安装失败。</p><h2 id="我踩到的一些坑"><a href="#我踩到的一些坑" class="headerlink" title="我踩到的一些坑"></a>我踩到的一些坑</h2><p>0.编译的时候cmake需要下载一些组件，需要掌握科学的知识。</p><p>1.在编译的时候先是遇到了QT的错误，在<code>make -j4</code>的时候可以看到error log的里面又出现大量的QT错误，这时候可以使用<code>sudo apt install qt-sdk</code>来安装QT的一系列组件。</p><p>2.[modules&#x2F;xfeatures2d&#x2F;CMakeFiles&#x2F;opencv_xfeatures2d.dir&#x2F;all] Error 2<br>遇到这个错误或者类似的出现在opencv_contrib模块中的一些错误，很有可能是opencv_contrib的版本和opencv版本的不一致造成的。因为opencv_contrib这个模块带有很多实验性的功能，一般开发进度是早于opencv的版本，这时候需要使用Git 的tag版本标记切换本地分支的方式回到官方标记的适用于某一版本的opencv_contrib（因为Git不太熟悉，这种说法可能有所错误），总之需要检查opencv_contrib的版本要和opencv一致。</p><hr><p>参考资料</p><p>[Jason’s Blog Ubuntu 下安装 OpenCV3](<a href="http://cuckootan.me/2016/10/01/Linux/Ubuntu">http://cuckootan.me/2016/10/01/Linux/Ubuntu</a> 下安装 OpenCV3&#x2F;)</p><p><a href="https://github.com/opencv/opencv_contrib">opencv_contrib</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近将开发平台逐步转移到Linux上来，会有不少坑来踩，另外发现网上搜索到的内容多数是旧版本的安装过程，不太适宜现在的安装过程。</summary>
    
    
    
    <category term="图像识别的学习之路" scheme="https://hdsky.pw/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
    <category term="opencv" scheme="https://hdsky.pw/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/opencv/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="opencv" scheme="https://hdsky.pw/tags/opencv/"/>
    
    <category term="图像识别" scheme="https://hdsky.pw/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow 折腾之旅</title>
    <link href="https://hdsky.pw/2017-10-03-tensorflow-notebook.html"/>
    <id>https://hdsky.pw/2017-10-03-tensorflow-notebook.html</id>
    <published>2017-10-02T18:20:32.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>路过学校某实验室的时候发现他们在使用TensorFlow做开发，就突然想折腾下这东西，当然我对此也是非常感兴趣的。<span id="more"></span><br>最后更新日期 2017&#x2F;10&#x2F;3</p><h1 id="TensorFlow-折腾之旅"><a href="#TensorFlow-折腾之旅" class="headerlink" title="TensorFlow 折腾之旅"></a>TensorFlow 折腾之旅</h1><blockquote><p>TensorFlow是一个开源软件库，用于各种感知和语言理解任务的机器学习。目前被50个团队用于研究和生产许多Google商业产品如语音识别、Gmail、Google 相册和搜索其中许多产品曾使用过其前任软件DistBelief。TensorFlow最初由Google Brain团队开发，用于Google的研究和生产，于2015年11月9日在Apache 2.0开源许可证下发布。</p><footer><strong>维基百科</strong><cite><a href="https://zh.wikipedia.org/wiki/TensorFlow">TensorFlow</a></cite></footer></blockquote><h2 id="安装的过程"><a href="#安装的过程" class="headerlink" title="安装的过程"></a>安装的过程</h2><p>感觉TensorFlow的中文教程还是比较少的，机器学习这东西对于我们学渣来讲非常高大上，要克服一些语言障碍来学习。相对而言英文文档描述的非常详细，在linux下只需要几条命令即可完成TensorFlow的安装过程。</p><p>因为我的显卡不支持英伟达的GPU加速，所以就选择了CPU版本的TensorFlow，然后使用的是<code>Installing with virtualenv</code>的安装方式，这种方式和直接用pip的方式安装其实区别不大，可以根据自己的python版本以及系统型号还有是否支持CUDA的情况来选择适合自己的安装方式，在此不做各种安装方式的介绍，只是单纯的记录自己的安装过程。</p><p>先是安装依赖(以Python3为版本)</p><p><code>sudo apt-get install python3-pip python3-dev python-virtualenv</code></p><p>创建虚拟环境</p><p><code>virtualenv --system-site-packages -p python3 ~/tensorflow</code></p><p>进入虚拟环境</p><p><code>source ~/tensorflow/bin/activate</code></p><p>当bash前面出现<code>(tensorflow)</code>的字样就说明进入了虚拟环境，然后使用下面的命令安装pip</p><p><code>easy_install -U pip</code></p><p>然后使用pip3安装tensorflow(只支持CPU的版本)</p><p><code>pip3 install --upgrade tensorflow</code></p><p>一阵等待过后tensorflow就应该安装完毕了，那么要怎样检验是否安装完毕呢，Google官方提供了这样的一个测试程序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">hello = tf.constant(<span class="string">&#x27;Hello, TensorFlow!&#x27;</span>)</span><br><span class="line">sess = tf.Session()</span><br><span class="line"><span class="built_in">print</span>(sess.run(hello))</span><br></pre></td></tr></table></figure><p>我们先在虚拟环境中（bash前带有<code>(tensorflow)</code>）输入</p><p><code>python3</code></p><p>然后再将上方的python代码输入到虚拟环境的python编译器中。如果得到<code>Hello, TensorFlow!</code>的结果就说明tensorflow已经安装完成啦<del>完结撒花（大雾）</del></p><p>还有一些事情要说明，就是如何退出我们构建的虚拟环境，可以使用<code>deactivate</code>命令来退出虚拟环境，那么问题来了我们要如何再次进入虚拟环境呢，可以再次使用<code>source ~/tensorflow/bin/activate</code>来进入。</p><p>卸载的命令(其中targetDirectory为TensorFlow的存放目录)</p><p><code>rm -r targetDirectory</code></p><h2 id="安装过程中出现的一些问题（什么嘛，不存在的）"><a href="#安装过程中出现的一些问题（什么嘛，不存在的）" class="headerlink" title="安装过程中出现的一些问题（什么嘛，不存在的）"></a>安装过程中出现的一些问题（什么嘛，不存在的）</h2><p>1.在使用测试代码的时候出现了这样的警告<code>The TensorFlow library wasn&#39;t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.</code>翻译大概的意思就是说TensorFlow库未编译和使用SSE4.2指令，但这些指令在您的机器上可用，并可加速CPU计算。问题出现的原因是TensorFlow为了兼容性在pip分发的包中没有编译SSE指令，SSE指令能够使TensorFlow的运行效率有很大的提升，那么要怎样才能开启SSE指令呢，需要使用源码安装的形式重新编译安装TensorFlow，如果忽略的话好像也没啥问题<del>其实是懒</del>。</p><p>2.在使用测试代码进行测试的过程中，测试返回的结果为<code>b&#39;Hello, TensorFlow!&#39;</code>该b前缀是为了表明一个字节的字符串。这和当前使用的python版本有关。使用<code>print(sess.run(hello).decode())</code>输出的结果就正常了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;路过学校某实验室的时候发现他们在使用TensorFlow做开发，就突然想折腾下这东西，当然我对此也是非常感兴趣的。</summary>
    
    
    
    <category term="学习笔记" scheme="https://hdsky.pw/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://hdsky.pw/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Tensorflow" scheme="https://hdsky.pw/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Python读书笔记</title>
    <link href="https://hdsky.pw/2017-09-23-python-notebook.html"/>
    <id>https://hdsky.pw/2017-09-23-python-notebook.html</id>
    <published>2017-09-23T13:39:25.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己写读书笔记，记录下自己的python学习中遇到的一些问题或者一些奇怪的东西。 <span id="more"></span></p><ol><li></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;input your age:&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;adult&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;young&quot;</span>)</span><br></pre></td></tr></table></figure><p>执行后会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: <span class="string">&#x27;&gt;=&#x27;</span> <span class="keyword">not</span> supported between instances of <span class="string">&#x27;str&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;int&#x27;</span></span><br></pre></td></tr></table></figure><p>原因是input()输入的是str类型，需要将其转成int型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int(input(&quot;input your age:&quot;))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;自己写读书笔记，记录下自己的python学习中遇到的一些问题或者一些奇怪的东西。</summary>
    
    
    
    <category term="学习笔记" scheme="https://hdsky.pw/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="随写" scheme="https://hdsky.pw/tags/%E9%9A%8F%E5%86%99/"/>
    
    <category term="学习笔记" scheme="https://hdsky.pw/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>有些必须要告诉大家的事</title>
    <link href="https://hdsky.pw/2017-08-26-something-should-tell-you.html"/>
    <id>https://hdsky.pw/2017-08-26-something-should-tell-you.html</id>
    <published>2017-08-06T10:07:34.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>我又随便写的一点东西。<br>米娜桑，在消失了一段时间后我终于又想起了网站的<del>喵喵</del>密码😘<span id="more"></span></p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>　　在我离开的这段时间里发生了很多的事情，比如和小伙伴在机器人省赛中拿了三等奖哇，还有在大三期末和几个小伙伴一起撸信号与系统的期末复习<del>神特喵的通宵，最后过了，完结撒花</del></p><h2 id="让我们来谈谈省赛的事"><a href="#让我们来谈谈省赛的事" class="headerlink" title="让我们来谈谈省赛的事"></a>让我们来谈谈省赛的事</h2><p>　　在浙江大学生机器人省赛之前的时候我是非常慌的😐，因为第一次接触也不知道自己啥水平，而且听起来这个比赛还是有很多大佬参加的，然后就开启了半划水半赶工的生活，我负责的是图像处理的那部分<del>事实证明我的姿势水平还是不够高，没有完全按照预期来实现图像识别的功能。</del>在老师的督促下，一个晚上把颜色识别的部分做完了。<del>实际上那时候老师已经看出来我们在划水，嘤嘤嘤</del>，在这个晚上当然是我在突击了😏<br>　　在整个智障车的硬件搭建过程中也是问题不断哇，比如在将基础平台搭建完成后我们的车体需要重构以适应比赛的需求，然后就开始了各种定制，以及和隔壁大型智障车进行深入友好的交流。在这里感谢大型智障车的队长，帮我们解决了很多工程上的结构问题，最终能让智障车达到了比赛的要求。<del>最起码保证能跑了</del><br>　　唔，再后来就是大家一起划水的日子，到了比赛前夕，偶然间得到了浙大校赛的消息，我就去看了看。<del>我才不会说是去玩ingress的呢</del>这一看不得了哇，然后内心就产生一种<del>我校药丸的赶脚</del>🦄回来就开始疯狂的划水（真。划水<br>　　后面这种感觉一直延续到省赛第二天，嘛我这个队长完全是靠队员带着跑。在此感谢各位队员的不离不弃。（队长嘛就是来背锅的），再有就是感谢省赛上各位弃赛的小伙伴，以及表现的很棒的各位获奖选手，让我见识了各位学校的（技巧。<br>　　在teamwork的参与中大家免不了开始各种甩锅，比如我最喜欢和俊俊说的:</p><blockquote><p>我通信做好了，我可以玩游戏了😉<br>                          —To Junjun</p></blockquote><p>　　特别感谢lyic大佬，<del>因为一个全局变量名差点没被打死</del>。</p><h2 id="让我们来谈谈信号与系统的事"><a href="#让我们来谈谈信号与系统的事" class="headerlink" title="让我们来谈谈信号与系统的事"></a>让我们来谈谈信号与系统的事</h2><p>　　这部分好像没啥好说的，其实就是一群学霸带着一个学渣一个晚上修完整个学期课程的故事。</p><h2 id="让我们来谈谈军训的事"><a href="#让我们来谈谈军训的事" class="headerlink" title="让我们来谈谈军训的事"></a>让我们来谈谈军训的事</h2><p>　　嘛，放假闲的蛋疼报了军训<del>妇联</del>副连，带着一群小朋友嘻嘻哈蛤，然后带着补贴奔向澳门XMA的故事（没错这是个励志的故事</p><h2 id="让我们来谈谈短学期的事"><a href="#让我们来谈谈短学期的事" class="headerlink" title="让我们来谈谈短学期的事"></a>让我们来谈谈短学期的事</h2><p>　　我们要首先感谢小莫同学，在小莫同学抱着抱大腿的想法抱上了我，但事实上被我反抱大腿。（事后总结的时候，小莫同学说我们是抱他大腿最听话的一批）喵喵喵？</p><h2 id="最后一点想说的事"><a href="#最后一点想说的事" class="headerlink" title="最后一点想说的事"></a>最后一点想说的事</h2><p>　　最后这部分想说一下最近的社会情况，破娃酱弃坑以后掀起了不少<del>波澜哥</del>，最近圈子里一团糟，大家纷纷准备<del>出国留学</del>，但是仔细想想，里面是不是藏着一个更大的秘密呢。🐸</p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><blockquote><p>　　莫失莫忘，仙寿恒昌。<br>　　不离不弃，芳龄永继。</p><footer><strong>《红楼一梦》 曹雪芹</strong></footer></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;我又随便写的一点东西。&lt;br&gt;米娜桑，在消失了一段时间后我终于又想起了网站的&lt;del&gt;喵喵&lt;/del&gt;密码😘</summary>
    
    
    
    <category term="随便写的东西" scheme="https://hdsky.pw/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
    <category term="上网姿势" scheme="https://hdsky.pw/tags/%E4%B8%8A%E7%BD%91%E5%A7%BF%E5%8A%BF/"/>
    
    <category term="随写" scheme="https://hdsky.pw/tags/%E9%9A%8F%E5%86%99/"/>
    
    <category term="上网" scheme="https://hdsky.pw/tags/%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo与Upyun如何更好的在一起搞基（误）</title>
    <link href="https://hdsky.pw/2017-03-03-hexo-upyun.html"/>
    <id>https://hdsky.pw/2017-03-03-hexo-upyun.html</id>
    <published>2017-03-03T11:20:06.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近博客从Wordpress迁移至hexo，一是因为原来的腾讯云学生机的带宽太低，二是在学生服务器过期后有迁移至Github的想法，不如早点动手（23333333333），hexo的搭建以及各种加特技就不再多说了，网上有很多对应的教程。在迁移至hexo后速度依旧不太理想，然后就想着加入CDN的大军，在网上寻找了半天没有比较合适的教程，也踩了不少的坑，在此记录下来，为后面来的小伙伴指条明路0.0。 <span id="more"></span><br>　<br>首先需要说明的是最开始我选择的是腾讯云+upyun的自主源站，但后面发现这种的效果不好，适用于访问量较大的网站，但自己的网站太小了orz，因为经常修改网页，所以很多的网页以及资源不能及时的缓存至CDN，在之后选择了又拍云作为源站，这样全站就开启了CDN，速度UP。所以下面的内容是以又拍云为源站为示例，自主源站的配置与之类似，敬请参考。</p><h1 id="在Upyun注册一个账号"><a href="#在Upyun注册一个账号" class="headerlink" title="在Upyun注册一个账号"></a>在Upyun注册一个账号</h1><p> <a href="https://www.upyun.com/">https://www.upyun.com/</a><br> 然后创建一个服务，这里我们选择的是全网加速服务。</p><img src="/images/2017/hexo-upyun/1.png" class="" width="800"><p>在这里我们选择以又拍云作为源站（因为我之前已经创建过服务，所以这里显示服务名已存在）</p><img src="/images/2017/hexo-upyun/2.png" class="" width="800"><p>在为服务授权这里需要创建操作员，当然你直接使用管理员账户也是可以的；<br>在此处创建的操作员账户和密码需要自己记住，我们后面需要用到。</p><img src="/images/2017/hexo-upyun/3.png" class="" width="800"><h1 id="创建成功并进入服务管理界面"><a href="#创建成功并进入服务管理界面" class="headerlink" title="创建成功并进入服务管理界面"></a>创建成功并进入服务管理界面</h1><p>在这里是对创建的服务进行操作的地方，值得注意的是，要是用自己的域名作为访问地址的话，需要在域名服务商处将CNAME 配置为又拍云指定的地址，并且域名需要备案。</p><img src="/images/2017/hexo-upyun/4.png" class="" width="800"><p>下一步我们需要对已有的操作员进行授权，或者新创建一个操作员，并将其与本服务相关联。需要赋予操作员读取写入以及删除的权限。</p><img src="/images/2017/hexo-upyun/5.png" class="" width="800"><img src="/images/2017/hexo-upyun/6.png" class="" width="800"><img src="/images/2017/hexo-upyun/7.png" class="" width="800"><p>建议开启其中的代码压缩功能，能够优化hexo生成的html文件</p><img src="/images/2017/hexo-upyun/8.png" class="" width="800"><p>　　至此在又拍云中需要完成的工作已经结束了，下面让我们回到本地的hexo中进行配置，并以win平台为例，详细讲解如何将本地生成的网页上传至又拍云中。我选择的是使用FTP的方式将网站所有资源上传至又拍云的存储空间中，因为hexo生成的文件为纯静态的，所以直接上传全部资源至CDN即可，你甚至不需要有自己的服务器，我就是这么干的(～￣▽￣)～<br>　　如果你的网站不是很频繁的更新的话，可以使用FTP客户端，根据官方的文档<a href="http://docs.upyun.com/api/developer_tools/#ftpftps">http://docs.upyun.com/api/developer_tools/#ftpftps</a> 使用FTP软件直接将生成的.&#x2F;public文件夹中的所有内容上传至又拍云提供的空间当中。<br>　　当然这么做也是一种非常笨的办法，而在hexo中，你可以选择安装插件的方式来解放你的双手，在此感谢第三方开发者的辛勤劳动（世界因你而变得美好），项目地址： <a href="https://github.com/Menci/hexo-deployer-upyun/">https://github.com/Menci/hexo-deployer-upyun/</a> </p><h1 id="插件安装的方式"><a href="#插件安装的方式" class="headerlink" title="插件安装的方式"></a>插件安装的方式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-upyun --save</span><br></pre></td></tr></table></figure><img src="/images/2017/hexo-upyun/9.png" class="" width="800"><p>　　在安装完成后，我们需要对插件进行一些修改，因为一些历史问题，我们知道Linux与Win的系统使用的是不同的斜杠分隔（”&#x2F;“与”&quot;），在Linux的系统中不会出现问题，所以在Win中我们需要对这部分文件进行替换。需要替换的文件地址在：<a href="https://github.com/Menci/hexo-deployer-upyun/tree/fix-win32-path">https://github.com/Menci/hexo-deployer-upyun/tree/fix-win32-path</a><br>　　我们只需要下载下面的两个文件，并替换掉blog插件目录下的同名文件即可（我的目录为D:\OneDrive\blog\node_modules\hexo-deployer-upyun\）具体情况视自己的环境而定。不然的话上传文件时候，在FTP上子文件夹不会在母文件夹的目录下，而是会单独出现在FTP中。</p><img src="/images/2017/hexo-upyun/10.png" class="" width="800"><p>　　接下来是对hexo的配置文件进行修改，使其能够在本地编译完成后自动上传至又拍云的空间当中。我们需要打开hexo目录下的_config.yml文件对其修改而并非是主题（themes）目录下的_config.yml文件，添加以下的代码并修改对应的信息。如果之前部署过hexo-deployer插件的小伙伴应该对此相当熟悉了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: upyun </span><br><span class="line">  bucket: bucket #服务名</span><br><span class="line">  operator: operator #操作员名</span><br><span class="line">  password: password #操作员密码</span><br><span class="line">  endpoint: v0.api.upyun.com</span><br><span class="line">  secret: secret</span><br><span class="line">  try_times: 5</span><br><span class="line">  ignore_path_re:</span><br><span class="line">    dir: null</span><br><span class="line">    file: &quot;.DS_Store$&quot;</span><br></pre></td></tr></table></figure><p>这里值得注意的是需要按又拍云的要求填写相应的部分：<br>FTP&#x2F;FTPS 登录方式<br>地址（主机)：<br>智能选路（推荐）：v0.ftp.upyun.com<br>电信线路：v1.ftp.upyun.com<br>联通线路：v2.ftp.upyun.com<br>移动线路：v3.ftp.upyun.com<br>加密：选择 不加密 使用 FTP，选择 显式的 FTP over TLS 或 TLS&#x2F;SSL 显式加密 使用 FTPS<br>用户名：操作员名&#x2F;服务名，如 operator&#x2F;mybucket<br>密码：操作员的密码<br>端口：21</p><p>配置完成后即可保存，然后再命令行使用下面的命令将hexo编译并上传至又拍云。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h1 id="如果显示deploy-done的话就是上传成功啦"><a href="#如果显示deploy-done的话就是上传成功啦" class="headerlink" title="如果显示deploy done的话就是上传成功啦~"></a>如果显示deploy done的话就是上传成功啦~</h1><p>（这里在我的电脑不会出现上传的文件名，可能是个BUG）</p><img src="/images/2017/hexo-upyun/11.png" class="" width="400"><p>至此hexo就部署到了你的又拍云上面，你可以尝试使用又拍云提供的测试域名进行访问测试。</p><h1 id="为你的Upyun添加HTTPS支持。"><a href="#为你的Upyun添加HTTPS支持。" class="headerlink" title="为你的Upyun添加HTTPS支持。"></a>为你的Upyun添加HTTPS支持。</h1><p>让你的网站更安全也更容易被搜索引擎收录。<br>　　在现在网络的新形势下，HTTPS已逐渐成为一种潮流，而主流的几款浏览器（Chrome，Firefox等）已将原来的HTTP格式的网页标记为不安全。虽然加入HTTPS需要增加一些成本，但在这里值得注意的是，又拍云提供了相应的服务，使得我们能够快速便捷的将自己的网站添加HTTPS的支持。<br>　　又拍云与 TrustAsia 达成战略合作，携手推出了免费版域名型 DV SSL 证书（由 Symantec 签发）的申请，有效期一年，原价 1900 元&#x2F;年。同时又拍云还与国际证书提供商 Let’s Encrypt 合作，为用户免费提供了另一款 DV SSL 证书的申请，证书到期自动续签，操作简单方便，一键完成证书的申请与部署。如果域名当前已有证书，又拍云也提供了自有证书的上传方式，无需人工协助，安全便捷。<br>　　在这里我们选择的是，从又拍云申请Let’s Encrypt的DV证书，这种方式对于个人用户而言非常适合，首先它是免费的，尽管有有效期，但到期后又拍云会帮你实现自动续期，所以非常的省时省力省心。<br>点击控制台的工具箱中的SSL证书服务，进入到了证书申购中。</p><img src="/images/2017/hexo-upyun/12.png" class="" width="800"><p>点击右下角的申购证书，选择Let’s Encrypt证书。</p><img src="/images/2017/hexo-upyun/13.png" class="" width="400"><p>输入你要申请的证书域名，并验证所有权，通过验证后即可生效。</p><img src="/images/2017/hexo-upyun/14.png" class="" width="400"><img src="/images/2017/hexo-upyun/15.png" class="" width="400"><p>然后将证书与你的又拍云服务相关联，并建议开启强制HTTPS服务。</p><img src="/images/2017/hexo-upyun/16.png" class="" width="800"><p>最后尝试下访问你自己的站，如果看到自己的网站有HTTPS并且提示安全，那么本次的HTTPS配置工作就圆满完成了（撒花~）</p><img src="/images/2017/hexo-upyun/17.png" class="" width="200">]]></content>
    
    
    <summary type="html">&lt;p&gt;最近博客从Wordpress迁移至hexo，一是因为原来的腾讯云学生机的带宽太低，二是在学生服务器过期后有迁移至Github的想法，不如早点动手（23333333333），hexo的搭建以及各种加特技就不再多说了，网上有很多对应的教程。在迁移至hexo后速度依旧不太理想，然后就想着加入CDN的大军，在网上寻找了半天没有比较合适的教程，也踩了不少的坑，在此记录下来，为后面来的小伙伴指条明路0.0。</summary>
    
    
    
    <category term="技术改变生活" scheme="https://hdsky.pw/categories/%E6%8A%80%E6%9C%AF%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Upyun" scheme="https://hdsky.pw/tags/Upyun/"/>
    
  </entry>
  
  <entry>
    <title>没事来一发红米4A测评（伪）</title>
    <link href="https://hdsky.pw/2017-02-10-mi4a.html"/>
    <id>https://hdsky.pw/2017-02-10-mi4a.html</id>
    <published>2017-02-10T12:28:55.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在京东商城上给爷爷买了台手机，比较了一下就选择了这款红米4A，一是爷爷初次接触智能机，而红米系列的机型都带有极简模式很适合老年朋友使用；二是这款机的价位还算不错，相较于友商来讲还是可以的。（在我下单的前几天小米就宣布提价100，不过提价了，友商也提价了…不由得吐槽一句，涨价了，哥你倒是有货呀。w(ﾟДﾟ)w）<br>下面是对此产品的一些简短评测。<span id="more"></span><br>（文内图像旋转问题有待解决）</p><h1 id="硬件篇"><a href="#硬件篇" class="headerlink" title="硬件篇"></a>硬件篇</h1><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><img src="/images/2017/mi4a/phone/1.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/2.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/3.jpg" class="" width="400"><h3 id="主角登场了"><a href="#主角登场了" class="headerlink" title="主角登场了"></a>主角登场了</h3><img src="/images/2017/mi4a/phone/4.jpg" class="" width="400"><h3 id="全家福（里面的东西很简单）"><a href="#全家福（里面的东西很简单）" class="headerlink" title="全家福（里面的东西很简单）"></a>全家福（里面的东西很简单）</h3><img src="/images/2017/mi4a/phone/5.jpg" class="" width="400"><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>整体的厚度很可观，但拿到手里不太重。大小适中，后壳有廉价感。</p><img src="/images/2017/mi4a/phone/6.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/7.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/8.jpg" class="" width="400"><h2 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h2><p>日常MI开头，power by android 进去后就是最新的MIUI8，少许设置后进入桌面。</p><img src="/images/2017/mi4a/phone/8-1.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/9.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/10.jpg" class="" width="400"><img src="/images/2017/mi4a/phone/12.jpg" class="" width="400"><h1 id="软件篇"><a href="#软件篇" class="headerlink" title="软件篇"></a>软件篇</h1><h2 id="系统app展示"><a href="#系统app展示" class="headerlink" title="系统app展示"></a>系统app展示</h2><img src="/images/2017/mi4a/app/1.png" class="" width="400"><h3 id="米家"><a href="#米家" class="headerlink" title="米家"></a>米家</h3><img src="/images/2017/mi4a/app/2.png" class="" width="400"><h3 id="天气（底部广告-滑稽ADUI）"><a href="#天气（底部广告-滑稽ADUI）" class="headerlink" title="天气（底部广告~滑稽ADUI）"></a>天气（底部广告~滑稽ADUI）</h3><img src="/images/2017/mi4a/app/5.png" class="" width="400"><img src="/images/2017/mi4a/app/3.png" class="" width="400"><img src="/images/2017/mi4a/app/9.png" class="" width="400"><h3 id="谜一样的读取通讯录"><a href="#谜一样的读取通讯录" class="headerlink" title="谜一样的读取通讯录"></a>谜一样的读取通讯录</h3><img src="/images/2017/mi4a/app/4.png" class="" width="400"><h3 id="主题商店"><a href="#主题商店" class="headerlink" title="主题商店"></a>主题商店</h3><img src="/images/2017/mi4a/app/6.png" class="" width="400"><h3 id="日历（快抢红包；滑稽）"><a href="#日历（快抢红包；滑稽）" class="headerlink" title="日历（快抢红包；滑稽）"></a>日历（快抢红包；滑稽）</h3><img src="/images/2017/mi4a/app/7.png" class="" width="400"><h3 id="关于手机"><a href="#关于手机" class="headerlink" title="关于手机"></a>关于手机</h3><img src="/images/2017/mi4a/app/8.png" class="" width="400"><h3 id="下拉菜单与与预装软件（微软大法好，肯定有PY交易）"><a href="#下拉菜单与与预装软件（微软大法好，肯定有PY交易）" class="headerlink" title="下拉菜单与与预装软件（微软大法好，肯定有PY交易）"></a>下拉菜单与与预装软件（微软大法好，肯定有PY交易）</h3><img src="/images/2017/mi4a/app/13.jpg" class="" width="400"><img src="/images/2017/mi4a/app/14.jpg" class="" width="400"><img src="/images/2017/mi4a/app/15.jpg" class="" width="400"><img src="/images/2017/mi4a/app/16.jpg" class="" width="400"><h3 id="极简模式好评"><a href="#极简模式好评" class="headerlink" title="极简模式好评"></a>极简模式好评</h3><p>这也是我买它的原因</p><img src="/images/2017/mi4a/app/10.png" class="" width="400"><h1 id="拍照对比"><a href="#拍照对比" class="headerlink" title="拍照对比"></a>拍照对比</h1><p>手里只有iphoneSE这一台设备，唔，对红米4A基本碾压，没办法，不比不知道差距在哪里0.0<br>前三张为红米4A所拍摄，后三张为iphoneSE所拍摄。<br>为了隐私安全隐去了EXIF信息，照片皆为随手拍，照片拍出来啥样就啥样。<br>我的感觉就是看一个国产手机好不好就是打开相机，一打开摄像头基本暴露了，相机的对焦速度以及白平衡算法的技术，唔，感觉很直观嘛2333333333333</p><img src="/images/2017/mi4a/show/1.jpg" class="" width="400"><img src="/images/2017/mi4a/show/2.jpg" class="" width="400"><img src="/images/2017/mi4a/show/3.jpg" class="" width="400"><img src="/images/2017/mi4a/show/s1.jpg" class="" width="400"><img src="/images/2017/mi4a/show/s2.jpg" class="" width="400"><img src="/images/2017/mi4a/show/s3.jpg" class="" width="400"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>唔，手机看起来还是不错的233333，但是我还是教我爷爷玩手机去吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在京东商城上给爷爷买了台手机，比较了一下就选择了这款红米4A，一是爷爷初次接触智能机，而红米系列的机型都带有极简模式很适合老年朋友使用；二是这款机的价位还算不错，相较于友商来讲还是可以的。（在我下单的前几天小米就宣布提价100，不过提价了，友商也提价了…不由得吐槽一句，涨价了，哥你倒是有货呀。w(ﾟДﾟ)w）&lt;br&gt;下面是对此产品的一些简短评测。</summary>
    
    
    
    <category term="评测" scheme="https://hdsky.pw/categories/%E8%AF%84%E6%B5%8B/"/>
    
    
    <category term="小米mi" scheme="https://hdsky.pw/tags/%E5%B0%8F%E7%B1%B3mi/"/>
    
  </entry>
  
  <entry>
    <title>2017春节快乐！</title>
    <link href="https://hdsky.pw/2017-01-27-happychinesenewyear2017.html"/>
    <id>https://hdsky.pw/2017-01-27-happychinesenewyear2017.html</id>
    <published>2017-01-27T13:31:58.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是中国传统的新春佳节，在除夕夜来临之际，在此恭祝大家新年快乐。<span id="more"></span></p><p>第一次写这种祝福的文章，也不知如何下手，祝福的话也不会说太多。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天是中国传统的新春佳节，在除夕夜来临之际，在此恭祝大家新年快乐。</summary>
    
    
    
    <category term="新春祝福" scheme="https://hdsky.pw/categories/%E6%96%B0%E6%98%A5%E7%A5%9D%E7%A6%8F/"/>
    
    
    <category term="春节" scheme="https://hdsky.pw/tags/%E6%98%A5%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>（转）流氓软件终结者3.5 - 只需要一个批处理屏蔽大多数国产杀软卫士</title>
    <link href="https://hdsky.pw/2017-01-02-certificate.html"/>
    <id>https://hdsky.pw/2017-01-02-certificate.html</id>
    <published>2017-01-02T14:19:13.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>运行此批处理后，将会自动屏蔽百度杀毒、百度卫士、360安全卫士、360杀毒、QQ计算机管家、瑞星杀毒软件、金山毒霸、金山卫士、CNNIC、腾讯游戏安全中心</p><p>从三个方面进行：屏蔽其下载地址、拉黑其证书、禁止访问其安装目录<span id="more"></span></p><p>【使用更新之前请先运行恢复脚本，避免发生不可预料的错误】</p><p>&#x2F;&#x2F;原作者已弃坑，此脚本不再被支持。</p><p>&#x2F;&#x2F;本文转载自原作者的个人博客。原文地址 <a href="https://liwei2.com/2015/11/27/378.html">https://liwei2.com/2015/11/27/378.html</a>  相关权益归原作者所有。</p><h1 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h1><blockquote><p>2016年5月5日 更新<br>1、修复了x86系统下闪退的问题</p><p>2016年4月18日 v3.3 更新<br>1、修复了x86系统中会遇到的屏蔽失效和x64中屏蔽360失效的问题<br>2、removed traditional chinese support</p></blockquote><img src="/images/2017/certificate/bat-01.png" class="" width="400"><img src="/images/2017/certificate/bat-03.png" class="" width="400"><p>所有一切，仅需一个不到3kb的批处理！<br>下载地址：<a href="http://sotypx-10009423.cos.myqcloud.com/malware-kill3.5.zip">点此下载</a></p><p>如果你要拉黑其他证书，请将要屏蔽的证书（crt格式）丢到这个脚本的certificate目录下，certificate目录里有个脚本叫「管理员」一键拉黑目录下的证书.bat，双击即可拉黑certificate目录下面的所有证书，certificate目录中附带了一些证书，后缀crt格式，如果不需要屏蔽还请删除<br>关于如何提取证书，请参阅：<a href="https://www.zhihu.com/question/26917038">https://www.zhihu.com/question/26917038</a><br>———————————-以下为hdsky个人撰写，非原文内容。—————————-</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>针对于在win10中偶现的获取不到管理员权限的问题，我找到了新的方法并改写了原作者的相关代码。其他代码并未做修改，欢迎下载尝试。（此版本为hdsky个人修改，非原作者所为，特此声明）</p><p>魔改版下载地址：<a href="http://hdsky.pw/file/malware-kill3.5%E9%AD%94%E6%94%B9%E7%89%88.rar">点此下载</a></p><h2 id="介绍一下如何使用拉黑证书的方式来禁止流氓软件的安装"><a href="#介绍一下如何使用拉黑证书的方式来禁止流氓软件的安装" class="headerlink" title="介绍一下如何使用拉黑证书的方式来禁止流氓软件的安装"></a>介绍一下如何使用拉黑证书的方式来禁止流氓软件的安装</h2><p>1-Cortana 中键入 certmgr.msc ，回车；<br>2-在左侧栏选择“不信任的证书”；<br>3-选择展开的树状结构中的“证书”目录；</p><img src="/images/2017/certificate/1.png" class="" width="800">]]></content>
    
    
    <summary type="html">&lt;p&gt;运行此批处理后，将会自动屏蔽百度杀毒、百度卫士、360安全卫士、360杀毒、QQ计算机管家、瑞星杀毒软件、金山毒霸、金山卫士、CNNIC、腾讯游戏安全中心&lt;/p&gt;
&lt;p&gt;从三个方面进行：屏蔽其下载地址、拉黑其证书、禁止访问其安装目录</summary>
    
    
    
    <category term="技术改变生活" scheme="https://hdsky.pw/categories/%E6%8A%80%E6%9C%AF%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="上网姿势" scheme="https://hdsky.pw/tags/%E4%B8%8A%E7%BD%91%E5%A7%BF%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>如何设置BAT开机启动（无UAC弹窗）</title>
    <link href="https://hdsky.pw/2016-12-31-how-to-set-bat-boot.html"/>
    <id>https://hdsky.pw/2016-12-31-how-to-set-bat-boot.html</id>
    <published>2016-12-31T08:12:23.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>针对于某些同学的特殊需求，按此教程可将之前的那个BAT设置为开机启动，并在开启UAC（使用者帳戶控制）的情况下实现无UAC弹窗。当然有条件的同学在路由器上进行配置就好了，可以无视，另外不建议对电脑不了解的小伙伴进行下面的操作。<del>为了你和世界的和平</del><span id="more"></span></p><h1 id="科普"><a href="#科普" class="headerlink" title="科普"></a>科普</h1><blockquote><p>用户帐户控制（英语：User Account Control，UAC）是Windows Vista中新出现的安全技术，通过限制应用软件而改进Windows操作系统的安全性。Windows 7中保持了这个功能，但是可以允许用户选择UAC的安全等级。</p><footer><strong>维基百科</strong><cite><a href="https://zh.wikipedia.org/zh-cn/用户帐户控制">zh.wikipedia.org/zh-cn/用户帐户控制</a></cite></footer></blockquote><p>在正常的情况下，我建议开启UAC。<del>（除非它影响了你的正常生活233333333）</del></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>操作系统：Windows 10 家庭中文版<br>（其他版本应该都类似，请参考下文）<br>1.从<a href="https://hdsky.pw/2016/08/26/zuccnet/">https://hdsky.pw/2016/08/26/zuccnet/</a> 获取.bat文件<br>解压后右键用记事本打开，将文档末尾的pause删除，并保存。</p><img src="/images/2016/bat/0.png" class="" width="800"><p>如果嫌麻烦的话，这里有精简过文件：<a href="http://hdsky.pw/file/V07-%E5%89%AF%E6%9C%AC.rar">点我下载</a></p><h1 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h1><h2 id="在桌面开始处右键进入计算机管理"><a href="#在桌面开始处右键进入计算机管理" class="headerlink" title="在桌面开始处右键进入计算机管理"></a>在桌面开始处右键进入计算机管理</h2><img src="/images/2016/bat/1.png" class="" width="300"><h2 id="点击进入任务计划程序"><a href="#点击进入任务计划程序" class="headerlink" title="点击进入任务计划程序"></a>点击进入任务计划程序</h2><img src="/images/2016/bat/2.png" class="" width="800"><h2 id="进入创建任务"><a href="#进入创建任务" class="headerlink" title="进入创建任务"></a>进入创建任务</h2><img src="/images/2016/bat/3.png" class="" width="800"><h2 id="更改设置"><a href="#更改设置" class="headerlink" title="更改设置"></a>更改设置</h2><p>更改相应的设置，主要是常规，触发器，以及操作，记得要选中以最高权限运行，然后点击确定</p><img src="/images/2016/bat/4.png" class="" width="800"><img src="/images/2016/bat/5.png" class="" width="800"><img src="/images/2016/bat/6.png" class="" width="800"><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>如无意外应该就到这里了，以后每次进入系统都会自动运行bat文件了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对于某些同学的特殊需求，按此教程可将之前的那个BAT设置为开机启动，并在开启UAC（使用者帳戶控制）的情况下实现无UAC弹窗。当然有条件的同学在路由器上进行配置就好了，可以无视，另外不建议对电脑不了解的小伙伴进行下面的操作。&lt;del&gt;为了你和世界的和平&lt;/del&gt;</summary>
    
    
    
    <category term="技术改变生活" scheme="https://hdsky.pw/categories/%E6%8A%80%E6%9C%AF%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ZUCC" scheme="https://hdsky.pw/tags/ZUCC/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV的学习之路(一)环境的搭建以及和小伙伴Visual Studio的搞基之旅</title>
    <link href="https://hdsky.pw/2016-12-24-opencv-setup.html"/>
    <id>https://hdsky.pw/2016-12-24-opencv-setup.html</id>
    <published>2016-12-24T11:56:28.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始了新的折腾之路，参加了学校智能机器人的竞赛0.0，现在开始前期的准备工作，因为要做购物机器人，老师先让我们吧图像识别做出来，<del>年前做不出来就回家种田吧QAQ</del>为了方便整理资料，将工作中的步骤都记录下来，希望自己能够坚持下去。同时也建议同学们在学习时使用新版本的opencv，虽然新的版本资料很少，但时代在发展，不是么？<span id="more"></span></p><p>&#x2F;&#x2F;最近更新日期：2017&#x2F;12&#x2F;06</p><p>我们先介绍下OpenCV：</p><blockquote><p>OpenCV (Open Source Computer Vision) is a library of programming functions mainly aimed at real-time computer vision. Originally developed by Intel’s research center in Nizhny Novgorod (Russia), it was later supported by Willow Garage and is now maintained by Itseez. The library is cross-platform and free for use under the open-source BSD license.</p><footer><strong>维基百科</strong><cite><a href="https://en.wikipedia.org/wiki/OpenCV">OpenCV</a></cite></footer></blockquote><p><strong>多系统版本选择</strong></p><ul><li><a href="#Windows">Windows&amp;C++</a> </li><li><a href="#Linux">Linux&amp;C++&amp;Python</a> </li><li><a href="#Python">有关于Python环境的说明</a></li></ul><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="先前准备"><a href="#先前准备" class="headerlink" title="先前准备"></a>先前准备</h2><p>操作系统：Windows 10<br>开发工具：Visual Studio 2017<br>开发语言：C++<br>OpenCV版本：3.0.0   (安裝位置為D:\opencv)</p><hr><p>首先你需要的是从官网<a href="http://opencv.org/">http://opencv.org/</a><br>下载到你所需要的OpenCV版本</p><img src="/images/2016/opencv/1/1.png" class="" width="800"><p>在首页给出的是2.4.13，而我们需要的是3.0 的版本，在首页点进下载的选择页面</p><img src="/images/2016/opencv/1/2.png" class="" width="350"><p>此次用到的Visual Studio版本为2017，当然其他版本也是可以的，但我没用过，在此仅供参考。</p><h2 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h2><p>此电脑 → 右键属性 → 高级系统设置 → 环境变量 → path → 编辑<br>新增以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\opencv\build\x64\vc12\bin; D:\opencv\build\x86\vc12\bin;</span><br></pre></td></tr></table></figure><img src="/images/2016/opencv/1/3.png" class="" width="350"><h2 id="建立Visual-Studio-2017项目"><a href="#建立Visual-Studio-2017项目" class="headerlink" title="建立Visual Studio 2017项目"></a>建立Visual Studio 2017项目</h2><p>新建项目 → 左侧「Visual C++」 → Win32 控制台应用程式→ 输入项目名称 → 确定 → 下一步 → 只勾选「空项目」就好 → 完成</p><img src="/images/2016/opencv/1/4.png" class="" width="800"><img src="/images/2016/opencv/1/5.png" class="" width="800"><img src="/images/2016/opencv/1/6.png" class="" width="800"><h2 id="对Visual-Studio-2017进行相关设置"><a href="#对Visual-Studio-2017进行相关设置" class="headerlink" title="对Visual Studio 2017进行相关设置"></a>对Visual Studio 2017进行相关设置</h2><p>点击项目→属性→将平台设置为X64</p><img src="/images/2016/opencv/1/7.png" class="" width="800"><p>设定VC++目录 →在「Include目录」增加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\opencv\build\include</span><br></pre></td></tr></table></figure></p><img src="/images/2016/opencv/1/8.png" class="" width="350"><p>设定VC++目录 →在「库目录」增加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\opencv\build\x64\vc12\lib</span><br></pre></td></tr></table></figure></p><img src="/images/2016/opencv/1/9.png" class="" width="350"><p>设定连接器 →「输入」 →在「其他相依性」增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opencv_ts300d.lib</span><br><span class="line">opencv_world300d.lib</span><br></pre></td></tr></table></figure><img src="/images/2016/opencv/1/10.png" class="" width="350"><h2 id="新建源文件"><a href="#新建源文件" class="headerlink" title="新建源文件"></a>新建源文件</h2><p>在解决方案资源管理器中项目的源文件处右键→添加→新建项<br>选择CPP文件，将下面的测试代码粘贴至文件中，编译运行。</p><img src="/images/2016/opencv/1/11.png" class="" width="800"><img src="/images/2016/opencv/1/12.png" class="" width="800"><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">using namespace cv;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> main(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span><br><span class="line">&#123;</span><br><span class="line">argv[<span class="number">1</span>] = <span class="string">&quot;lena.jpg&quot;</span>;</span><br><span class="line">Mat image;</span><br><span class="line">image = imread(argv[<span class="number">1</span>], CV_LOAD_IMAGE_COLOR);</span><br><span class="line"><span class="keyword">if</span> (!image.data)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">namedWindow(<span class="string">&quot;Display&quot;</span>, CV_WINDOW_NORMAL);</span><br><span class="line">imshow(<span class="string">&quot;Display&quot;</span>, image);</span><br><span class="line">waitKey(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="至此OpenCV的配置工作就完成了"><a href="#至此OpenCV的配置工作就完成了" class="headerlink" title="至此OpenCV的配置工作就完成了"></a>至此OpenCV的配置工作就完成了</h2><p>有人会遇到缺少DLL文件的情况，在此提供64位的DLL文件下载：<a href="http://hdsky.pw/file/msvcp120DLLX64.rar" title="" target="">点我下载</a><br>将其放置在<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\opencv\build\x64\vc12\bin</span><br></pre></td></tr></table></figure></p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="先前准备-1"><a href="#先前准备-1" class="headerlink" title="先前准备"></a>先前准备</h2><p>操作系统：Ububtu 17.10 （或者其他linux操作）<br>开发工具：CLion<br>开发语言：C++&amp;Python<br>OpenCV版本：3.3</p><hr><h2 id="opencv的安装"><a href="#opencv的安装" class="headerlink" title="opencv的安装"></a>opencv的安装</h2><p>此处请参考我的另一篇文章</p><a href="https://hdsky.pw/2017/10/10/Linux-opencv3-3/" title="" target="">关于一次opencv3.3+Linux（Ubuntu17.04）的编译记录</a><h2 id="CLion新建项目"><a href="#CLion新建项目" class="headerlink" title="CLion新建项目"></a>CLion新建项目</h2><p>在新建完Clion的C++项目后需要修改项目自带的CMAKE文件，下面提供了一份文件范例（其中VisionTest为项目的名称，请根据实际情况自行修改）：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.6</span>)</span><br><span class="line"><span class="keyword">project</span>(VisionTest)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;OpenCV library status:&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;    version: $&#123;OpenCV_VERSION&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;    libraries: $&#123;OpenCV_LIBS&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;    include path: $&#123;OpenCV_INCLUDE_DIRS&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(SOURCE_FILES main.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(vision_test main.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(vision_test <span class="variable">$&#123;OpenCV_LIBS&#125;</span>)</span><br></pre></td></tr></table></figure><p>然后可以使用下面的测试程序进行测试：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;opencv2/core/core.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;opencv2/opencv.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;opencv2/highgui/highgui.hpp&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, this is opencv tutorial.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    cv::Mat img = cv::<span class="built_in">imread</span>(<span class="string">&quot;/home/jfg/Pictures/cat.jpeg&quot;</span>);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;Window&quot;</span>, CV_WINDOW_AUTOSIZE);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;Cat&quot;</span>, img);</span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>如果只需要Python环境的话只需要使用<code>pip install opencv-python</code>的命令（在Ubuntu中调用Python3时应使用<code>pip3 install opencv-python</code>命令）</p><p>需要注意的是pip中的opencv模块的版本相对最新版本来说会略低一些，如果需要opencv中新版本的特性则需要自行编译opencv，请参考另外一篇文章：</p><a href="https://hdsky.pw/2017/10/10/Linux-opencv3-3/" title="" target="">关于一次opencv3.3+Linux（Ubuntu17.04）的编译记录</a><h1 id="一些仅供参考的代码"><a href="#一些仅供参考的代码" class="headerlink" title="一些仅供参考的代码"></a>一些仅供参考的代码</h1><p><a href="https://github.com/HDsky/opencv_test">https://github.com/HDsky/opencv_test</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1]<a href="https://blogs.msdn.microsoft.com/microsoft_student_partners_in_taiwan/2016/05/14/%E5%B0%87opencv%E5%AE%8C%E7%BE%8E%E5%BB%BA%E7%BD%AE%E6%96%BCvisual-studio%E4%B8%8A/?replytocom=135#respond" title="" target="">將OpenCV完美建置於Visual Studio上</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近开始了新的折腾之路，参加了学校智能机器人的竞赛0.0，现在开始前期的准备工作，因为要做购物机器人，老师先让我们吧图像识别做出来，&lt;del&gt;年前做不出来就回家种田吧QAQ&lt;/del&gt;为了方便整理资料，将工作中的步骤都记录下来，希望自己能够坚持下去。同时也建议同学们在学习时使用新版本的opencv，虽然新的版本资料很少，但时代在发展，不是么？</summary>
    
    
    
    <category term="图像识别的学习之路" scheme="https://hdsky.pw/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="opencv" scheme="https://hdsky.pw/tags/opencv/"/>
    
    <category term="图像识别" scheme="https://hdsky.pw/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>WordPress无插件添加友情链接</title>
    <link href="https://hdsky.pw/2016-08-31-wordpresslink.html"/>
    <id>https://hdsky.pw/2016-08-31-wordpresslink.html</id>
    <published>2016-08-31T06:18:31.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>如何在Wordpress3.5版本以上添加友链。<span id="more"></span></p><p>wordpress 3.5以上已经不再显示友情链接了，在后台也已经看不到添加友链的导航了，这只是 wordpress 将友链取消掉了，但友链功能与文件还存在，只不过已经改成插件安装的形式了。</p><p>当然插件是越少安装越好，我们来看一下如何用代码来恢复友链的功能，在主题 functions.php 文件中添加如下的代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_filter( &quot;pre_option_link_manager_enabled&quot;, &quot;__return_true&quot; );</span><br></pre></td></tr></table></figure><p>这个时候再刷新看一下后台，是不是实现了无插件添加友链的功能了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;如何在Wordpress3.5版本以上添加友链。</summary>
    
    
    
    <category term="Wordpress建站" scheme="https://hdsky.pw/categories/Wordpress%E5%BB%BA%E7%AB%99/"/>
    
    
  </entry>
  
  <entry>
    <title>浙江大学城市学院（ZUCC）南校区内外网同时访问</title>
    <link href="https://hdsky.pw/2016-08-26-zuccnet.html"/>
    <id>https://hdsky.pw/2016-08-26-zuccnet.html</id>
    <published>2016-08-26T13:40:32.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己写的用于浙江大学城市学院（ZUCC）南校区内外网同时访问程序。<span id="more"></span></p><img src="/images/2016/bat/bat.png" class="" width="800"><p>最新版本说明：很高兴的通知在上个版本中抽风的提权模块又回来了0.0（当然是治好了） </p><p>OK，Just Enjoy It！</p><p>使用方法：下载完成后解压到一个地方，直接双击就好啦~</p><p>最新版下载地址：<a href="https://github.com/HDsky/A-batchfile-for-ZUCC">点此下载</a></p><p>有兴趣的小伙伴也可以去<a href="https://github.com/HDsky/A-batchfile-for-ZUCC">Github</a>查看源码，加星，提供建议都可以。</p><hr><p>以下为2016&#x2F;12&#x2F;20 归档  （请无视）</p><p>0.0很久以前写的BAT自动运行脚本，用于ZUCC南校区寝室同时外网访问0.0 怎么说呢，感觉写的还是比较渣，基本都是在造轮子，不过在不断改版本的过程中也在不断完善， 从第一个版本到最后一个版本变化还是挺大的。</p><p>原理就是调用CMD命令中的route命令让10开头的IP地址都走内网的网关，没办法解决的就是寝室内网是DHCP自动分配（实现固定IP比较麻烦）， 无法实现程序永久有效，只能使用前开一次。 虽说后面有些刷版本号的嫌疑&gt;_&lt;，但确实是在针对学校移动DNS劫持问题在不断解决。 打算以后用C++重新写一份，实现检查版本号自动更新什么的0.0，写的BAT加上EXE的壳基本被市面80%的杀软误报QAQ（大数字说的就是你）</p><p>因为写的对话框尚未完善所以就归档了，现在请使用batchfile</p><p>基于之前自己写的BAT批处理写的，因为刚开始学，写的不是很好，以后会加入自动更新模块什么的，总之会改好一点，至于北校区，希望有小伙伴能够提供帮助。</p><p>附下载连接：<a href="">点我下载</a></p><p>有兴趣的小伙伴也可以去<a href="">Github</a>查看源码，加星，提供建议都可以。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;自己写的用于浙江大学城市学院（ZUCC）南校区内外网同时访问程序。</summary>
    
    
    
    <category term="技术改变生活" scheme="https://hdsky.pw/categories/%E6%8A%80%E6%9C%AF%E6%94%B9%E5%8F%98%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ZUCC" scheme="https://hdsky.pw/tags/ZUCC/"/>
    
  </entry>
  
  <entry>
    <title>wordpress后台多媒体上传附件时出现http错误</title>
    <link href="https://hdsky.pw/2016-07-28-wordpress-upfile-meet-htttp-mistake.html"/>
    <id>https://hdsky.pw/2016-07-28-wordpress-upfile-meet-htttp-mistake.html</id>
    <published>2016-07-28T03:06:45.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在建站中多少会遇到一些问题，今天我们来看看上传多媒体出现http错误的解决方法。<span id="more"></span><br>通过更改成传统上传方式可以看到Nginx出现的是413 Request Entity Too Large<br>错误添加解决方法就是打开nginx主配置文件nginx conf，一般位于&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>在http{}段，修改或添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size 2m;</span><br></pre></td></tr></table></figure><p>然后重新加载Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><p>如果是以php运行的话，这个大小client_max_body_size要和php.ini中的如下值的最大值相等或稍大，这样就不会因为提交文件数据大小不一致出现错误。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_max_size=2M</span><br><span class="line">upload_max_filesize=2M</span><br></pre></td></tr></table></figure><p>修改后需要重启Nginx服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在建站中多少会遇到一些问题，今天我们来看看上传多媒体出现http错误的解决方法。</summary>
    
    
    
    <category term="Wordpress建站" scheme="https://hdsky.pw/categories/Wordpress%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Wordpress" scheme="https://hdsky.pw/tags/Wordpress/"/>
    
    <category term="解决方案" scheme="https://hdsky.pw/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>在Wordpress建站过程中遇到的问题（间歇更新）</title>
    <link href="https://hdsky.pw/2016-07-28-the-probleam-what-in-build-your-wordpress-loading.html"/>
    <id>https://hdsky.pw/2016-07-28-the-probleam-what-in-build-your-wordpress-loading.html</id>
    <published>2016-07-28T02:58:13.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在正式开始搭建前，你可能会遇到的一些问题 <span id="more"></span></p><h4 id="1-域名解析的问题"><a href="#1-域名解析的问题" class="headerlink" title="1.域名解析的问题"></a><span style="color: #00ff00;">1.域名解析的问题</span></h4><p>这时候你就需要检查系统中DNS的设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>在CentOS下面直接修改&#x2F;etc&#x2F;resolv.conf重启后会失效。则须要在&#x2F;etc &#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0里面最后加上dns的设置。要不然，重启后，肯定使用eth0设置中没有设 dns的相关信息，使&#x2F;etc&#x2F;resolv.conf恢复到原来的状态。</p><p>修改完成后重启网络</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><p>&nbsp;</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在正式开始搭建前，你可能会遇到的一些问题</summary>
    
    
    
    <category term="Wordpress建站" scheme="https://hdsky.pw/categories/Wordpress%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Wordpress" scheme="https://hdsky.pw/tags/Wordpress/"/>
    
    <category term="技术" scheme="https://hdsky.pw/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="解决方案" scheme="https://hdsky.pw/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>胡乱写的2016年高考作文（全国卷）</title>
    <link href="https://hdsky.pw/2016-07-26-College-Entrance-Examination.html"/>
    <id>https://hdsky.pw/2016-07-26-College-Entrance-Examination.html</id>
    <published>2016-07-26T06:55:10.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>当然只是随便写的一点东西。<span id="more"></span></p><p>　　假如一次考试你得了九十八分你会开心?相信大部分人的回答是我很开心，但我在一副漫画中却看到了另外一个故事，小男孩在得到九十八分的高分后却受到了批评，只因为这次的成绩比上次低了两分，而他的同伴尽管没有得到像他一样高的成绩，但受到了表扬，原因就是这次的成绩有所进步。而我从中得到的，是对于进步的思考，再小的进步，也有他的价值所在，都是值得称赞的。<br>　　进步伴随着我们的一生，从小时候的牙牙学语，到掌握一门新的技术，都是我们进步的体现。可以说进步是提升自我价值的途径，也是推动人类社会发展的动力。只有不断地进步才能体现作为一个成员在社会生活中的价值。同时进步是一点点积累的，正所谓量变引起质变，每一个微小的进步都是在为以后一大进步做准备，为一点点靠近成功做积累。<br>　　进步所能带给我们的除了成功，更重要的是我们在不断进步的路上所收获的感悟和体会。在路上我们会收获鲜花和掌声，但同时我们也因会被嘲笑和遇到困难而苦恼。这些所谓的绊脚石并没有影响我们追求进步，相反的他让我们不断锻炼自己，磨砺内心，使我们变得更加坚忍不拔。这些可以说都是进步所带给我们的恩赐，它让我们学会面对遇到的困难和挫折，并攻克他们。<br>　　我们在学会进步的同时，与不要忘记我们身边的人，他们同样需要进步的帮助。虽说我并不是一个高尚的人，但面对身边被困难困扰的小伙伴，我也会毫不犹豫的向他们提供力所能及的帮助。将我自己进步的方法毫不吝惜的告诉给他们，发自内心的希望小伙伴们也能够和我一同进步。一点点的进步会让他们感受到巨大的成就感，希望他们能够通过不断进步，哪怕是一点点的进步，都能够给予他们莫大的勇气，敢于直面困难。<br>　　学会进步，照亮他人前进的方向，首先要做好自身，进步并非一朝一夕，自己想要有所进步，更应该严于律己，一次的进步不代表永远的进步，要想走在时代的前列，就更要学会如何进步，永远要记得进步的原则，不要忽略一次小小的进步，它永远是你进步中最重要的一环。<br>　　一次次微小的进步看上去总是那么不起眼，再小的进步也会有他的价值，那么你呢，看完我的想法，我想你一定也有了自己的答案。我依然坚持我的看法，哪怕是再微小的进步都是值得称赞的，都有它的存在的价值。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;当然只是随便写的一点东西。</summary>
    
    
    
    <category term="随便写的东西" scheme="https://hdsky.pw/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
    <category term="高考" scheme="https://hdsky.pw/tags/%E9%AB%98%E8%80%83/"/>
    
    <category term="作文" scheme="https://hdsky.pw/tags/%E4%BD%9C%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>在腾讯云（Qloud）搭建自己的Wordpress博客（教程向）</title>
    <link href="https://hdsky.pw/2016-07-25-how-to-build-your-wordpress-in-qloud.html"/>
    <id>https://hdsky.pw/2016-07-25-how-to-build-your-wordpress-in-qloud.html</id>
    <published>2016-07-25T07:01:18.000Z</published>
    <updated>2022-06-27T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了在腾讯云（centos 6.5）下搭建自己的wordpress站点。<span id="more"></span>我们先介绍一下在linux下搭建网站的两者主流方式。</p><p><strong>LAMP</strong>是指一组通常一起使用来运行动态网站或者服务器的自由软件名称首字母缩写：Linux+Apache+Mysql&#x2F;MariaDB+Perl&#x2F;PHP&#x2F;Python</p><p>而LNMP则是以Nginx替代Apache</p><p>因为这两种方式的流行，这些软件往往被打包到一起提供为一键安装包方便一键配置网站环境。</p><p>建议先修资料：<a href="https://www.zning.net.cn/tech/3390.htm">Linux简单命令</a>、<a href="https://www.zning.net.cn/my/3392.htm">Vim编辑器的使用</a></p><p>本文主要介绍使用LNMP来进行wordpress博客的搭建。</p><h1 id="配置LNMP环境"><a href="#配置LNMP环境" class="headerlink" title="配置LNMP环境"></a>配置LNMP环境</h1><p>尽管已有一键配置LNMP的安装包，但是作为新手还是不建议选择一键安装，从分步安装中渐渐熟悉Linux的命令，也不失为一种练习方式。</p><p>首先我们先将主机上的软件用yum命令来更新到最新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><h2 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1.安装Nginx"></a><span style="color: #00ccff;">1.安装Nginx</span></h2><p>在安装软件时可以采用yum命令来安装需要的软件包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><p>按照提示，输入y后开始安装，安装完毕后，Nginx的配置文件在&#x2F;etc&#x2F;nginx目录下。使用以下命令启动Nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx start</span><br></pre></td></tr></table></figure><p>您可以通过浏览器访问 http:&#x2F;&#x2F;你的IP地址 来确定Nginx是否已经启动。</p><p>最后我们通过chkconfig命令将Nginx设置为开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chkconfig nginx on</span><br></pre></td></tr></table></figure><h2 id="2-安装MySQL"><a href="#2-安装MySQL" class="headerlink" title="2.安装MySQL"></a><span style="color: #00ccff;">2.安装MySQL</span></h2><p>同样适用yum命令来安装MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql-server</span><br></pre></td></tr></table></figure><p>安装完成之后，执行以下命令重启MySQL服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysqld restart</span><br></pre></td></tr></table></figure><p>重启过程中会提示如何设置MySQL的root密码，我们按照提示进行操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>这个脚本会经过一些列的交互问答来进行MySQL的安全设置。</p><p>首先提示输入当前的root密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter current password for root (enter for none):</span><br></pre></td></tr></table></figure><p>初始root密码为空，我们直接敲回车进行下一步。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set root password? [Y/n]</span><br></pre></td></tr></table></figure><p>设置root密码，默认选项为Yes，我们直接回车，提示输入密码，在这里设置您的MySQL的root账户密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Remove anonymous users? [Y/n]</span><br></pre></td></tr></table></figure><p>是否移除匿名用户，默认选项为Yes，建议按默认设置，回车继续。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Disallow root login remotely? [Y/n]</span><br></pre></td></tr></table></figure><p>是否禁止root用户远程登录？如果您只在本机内访问MySQL，建议按默认设置，回车继续。 如果您还有其他云主机需要使用root账号访问该数据库，则需要选择n。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Remove test database and access to it? [Y/n]</span><br></pre></td></tr></table></figure><p>是否删除测试用的数据库和权限？ 建议按照默认设置，回车继续。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reload privilege tables now? [Y/n]</span><br></pre></td></tr></table></figure><p>是否重新加载权限表？因为我们上面更新了root的密码，这里需要重新加载，回车。</p><p>完成后你会看到Success!的提示，MySQL的安全设置已经完成。我们可以使用以下命令登录MySQL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>按提示输入root密码，就会进入MySQL的交互界面，说明已经安装成功。</p><p>退出mysql的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>MySQL安装完成后默认监听外网的3306端口，有一定的安全隐患，我们通过编辑MySQL的配置文件，将MySQL服务修改为监听内网的3306端口，这样就不会被外界探测到，编辑&#x2F;etc&#x2F;my.cnf文件，在[mysqld]中增加一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind-address=x.x.x.x</span><br></pre></td></tr></table></figure><p>需要将上面的x.x.x.x替换成您的云主机的内网地址。内网地址可以从控制台云主机列表中找到。然后重启MySQL服务使配置生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysqld restart</span><br></pre></td></tr></table></figure><p>最后我们使用chkconfig命令将MySQL设置为开机启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chkconfig mysqld on</span><br></pre></td></tr></table></figure><h2 id="3-安装PHP"><a href="#3-安装PHP" class="headerlink" title="3.安装PHP"></a><span style="color: #00ccff;">3.安装PHP</span></h2><p>我们可以直接使用yum安装PHP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install php-fpm php-mysql php</span><br></pre></td></tr></table></figure><p>安装完成后我们将php-fpm启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service php-fpm start</span><br></pre></td></tr></table></figure><p>将php-fpm设置为开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chkconfig php-fpm on</span><br></pre></td></tr></table></figure><p>php安装完成之后，需要设置一下php session的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/lib/php/session/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R apache:apache /var/lib/php/session/</span><br></pre></td></tr></table></figure><p>这时php-fpm已经安装完毕，但是现在需要配置一下Nginx，在&#x2F;etc&#x2F;nginx&#x2F;conf.d目录中新建一个名为php.conf的文件，其内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    location ~ .php$ &#123;</span><br><span class="line">        root           /usr/share/php;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后执行以下命令使我们的配置生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><p>以上我们配置了Nginx的80端口用来测试，如果您在腾讯云控制台设置了安全组，需要检查该防火墙是否允许80端口，如果不允许的话，您可以在防火墙设置中新增防火墙，并关联到该主机。</p><p>&nbsp;</p><p>我们在&#x2F;usr&#x2F;share&#x2F;php目录下新建一个名为phpinfo.php的文件用来展示phpinfo信息，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>我们从浏览器打开 http:&#x2F;&#x2F;外网IP地址&#x2F;phpinfo.php， 您就能看到phpinfo信息了，说明我们php环境已经部署成功：</p><p>&nbsp;</p><p>验证PHP安装成功后，需要将此phpinfo.php文件删除，线上环境尽量不要暴漏使用的软件版本及路径信息，以防被入侵者利用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /usr/share/php/phpinfo.php</span><br></pre></td></tr></table></figure><p>安装wordpress，并进行配置</p><p>将LNMP环境安装配置好之后，就可以安装WordPress了。</p><h2 id="4-安装wordpress"><a href="#4-安装wordpress" class="headerlink" title="4.安装wordpress"></a><span style="color: #00ccff;">4.安装wordpress</span></h2><p>选择一个目录来存放下载的wordpress压缩包，在这里我为了方便放置在了root的根目录。</p><p>在你要存放的目录下使用wget命令来获取网络资源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/wordpress-4.5.3-zh_CN.tar.gz</span><br></pre></td></tr></table></figure><p>因为下载下来的是软件包，我们需要将其解压至目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf wordpress-4.5.3-zh_CN.tar.gz</span><br></pre></td></tr></table></figure><p>上面的方法是将压缩包中的文件解压到当前目录</p><p>要想将文件解压到指定目录（后面接你想解压到的目录，这里以usr&#x2F;share为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf wordpress-4.5.3-zh_CN.tar.gz -C /usr/share</span><br></pre></td></tr></table></figure><h2 id="5-配置数据库"><a href="#5-配置数据库" class="headerlink" title="5.配置数据库"></a><span style="color: #00ccff;">5.配置数据库</span></h2><p>写博客当然得先建好数据库，下面我们来配置一下MySQL数据库。</p><p>进入MySQL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>输入root用户的密码进入数据库。接下来就需要创建WordPress数据库了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE wordpress;</span><br></pre></td></tr></table></figure><p>接下来为wordpress创建一个新用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER wpuser@localhost;</span><br></pre></td></tr></table></figure><p>为此用户设置密码，比如把密码设置成wordpresspassword：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR wpuser@localhost=PASSWORD(&quot;wordpresspassword&quot;);</span><br></pre></td></tr></table></figure><p>还要为此用户设置访问wordpress数据库的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON wordpress.* TO wpuser@localhost IDENTIFIED BY &#x27;wordpresspassword&#x27;;</span><br></pre></td></tr></table></figure><p>最后将权限生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>MySQL部分就设置完了。下面我们还要打开WordPress的配置文件&#x2F;etc&#x2F;wordpress&#x2F;wp-config.php，</p><p>如果没有这个文件的话需要用如下命令创建一个wp-config.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp wp-config-sample.php wp-config.php</span><br></pre></td></tr></table></figure><p>将刚才对数据库的设置写到这里。找到文件中MySQL的部分，对其进行如下设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line"></span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;wpuser&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_PASSWORD&#x27;, &#x27;wordpresspassword&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-配置Nginx部分"><a href="#6-配置Nginx部分" class="headerlink" title="6.配置Nginx部分"></a><span style="color: #00ccff;">6.配置Nginx部分</span></h2><p>打开&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>按照下面的方式来修改nginx.conf的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/wordpress;</span><br><span class="line">        index  index.html index.php;</span><br><span class="line">        try_files $uri $uri/ /index.php?$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .php$ &#123;</span><br><span class="line">        root           /usr/share/wordpress;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中：listen参数代表指定访问端口。</p><p>root后面是你自己的网站目录，可以自行设置。</p><p>然后执行以下命令将Nginx重启一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h1 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h1><p>如果您服务器上安装有防火墙应用，例如firewalld，或者在腾讯云中设置了出入规则，需要进行设置防火墙，将TCP 80端口开放。</p><h1 id="完成配置WordPress的工作"><a href="#完成配置WordPress的工作" class="headerlink" title="完成配置WordPress的工作"></a>完成配置WordPress的工作</h1><p>此时我们在浏览器中打开相应的URl就可以开始执行WordPress的安装了，端口号为之前配置文件中设置的：</p><p>http:&#x2F;&#x2F;你的IP地址&#x2F;wp-admin&#x2F;install.php</p><p>在出现的网页中将几项基础配置填完:</p><p>再用刚才填过的账号登录进去，就可以了随意折腾你的博客了！</p><p>GOOD LUCK！</p><p>&nbsp;</p><p>&nbsp;</p><p>参考文献：</p><p>[1]美团云(bill),《在CentOS 6上安装WordPress》,</p><p><a href="https://mos.meituan.com/library/16/how-to-install-wordpress-on-centos6/">https://mos.meituan.com/library/16/how-to-install-wordpress-on-centos6/</a></p><p>[2]美团云(Chris),《在CentOS 6上搭建LNMP环境》,</p><p><a href="https://mos.meituan.com/library/19/how-to-install-lnmp-on-centos6/">https://mos.meituan.com/library/19/how-to-install-lnmp-on-centos6/</a></p><p>[3]张宁网(Zhangning),</p><p><a href="https://www.zning.net.cn/">https://www.zning.net.cn/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要介绍了在腾讯云（centos 6.5）下搭建自己的wordpress站点。</summary>
    
    
    
    <category term="Wordpress建站" scheme="https://hdsky.pw/categories/Wordpress%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Linux" scheme="https://hdsky.pw/tags/Linux/"/>
    
    <category term="Wordpress" scheme="https://hdsky.pw/tags/Wordpress/"/>
    
    <category term="建站" scheme="https://hdsky.pw/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
</feed>
